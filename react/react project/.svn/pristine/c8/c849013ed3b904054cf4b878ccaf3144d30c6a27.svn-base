var DataFactory = require('./DataFactory');
var Department = require('./Department');

function MemberData() {}

MemberData.prototype = Object.create(new DataFactory, {
	/// 获取所有成员信息
	getList: {
		value: function(teamId, callback) {
			var data = Interface.getMember();
			if (data) {
				this.list = data;
				this.list.sort(function(p, n) {
					var pName = p.display_name_pinyin.toLowerCase();
					var nName = n.display_name_pinyin.toLowerCase();
					if (pName > nName) return 1;
					if (pName < nName) return -1;
					return 0;
				});
				var items = {};
				for (var i = 0; i < data.length; i++) {
					items[data[i]._id] = data[i];
				}
				this.source = items;
				return true;
			}

			// 网络请求以后需要删除
			Forms.get({
				uri: '/teams/' + teamId + '/members',
				callback: function(e) {
					if (e.code == 200) {
						var data = e.data;
						if (data) {
							this.list = data;
							this.list.sort(function(p, n) {
									if (p.display_name_pinyin > n.display_name_pinyin) return 1;
									if (p.display_name_pinyin < n.display_name_pinyin) return -1;
									return 0;
								});
							var items = {};
							for (var i = 0; i < data.length; i++) {
								items[data[i]._id] = data[i];
							}
							this.source = items;
						}
					}

					typeof(callback) == 'function' && callback(e);
				}.bind(this)
			});
		}
	},
	/// 获取成员集合
	getCollect: {
		value: function(param, isAll) {
			var list = this.list || [];
			var ids;
			if (param && typeof(param.ids) =='string') {
				ids = param.ids.split(',');
			}
			return $.map(list, function(item) {
						if (item.is_delete == 1) return null;
						if (!Utils.validateMember(item) && isAll !== true) return null;
						if (ids) {
							if (ids.indexOf(item._id) != -1) return item;
							return null;
						}
						return item;
					});
		}
	}
});

MemberData.prototype.constructor = MemberData;

module.exports = new MemberData;