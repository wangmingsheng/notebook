var CheckBox = require('../../../components/CheckBox');
var TaskHandle = require('../../../handle/teamwork/Task');
var ProjectData = require('../../../data/Project');

module.exports = React.createClass({
    getDefaultProps: function() {
        return {bottomBlock: false}
    },
    taskToggle: function(item, ev) {
        if (ev.currentTarget.checked) {
            return TaskHandle.complete(item._id, function(result) {
                if(result.code == 200) {
                    item.is_completed = 1;
                    this.setState(this.state);
                }
            }.bind(this));
        }

        TaskHandle.uncomplete(item._id, function(result) {
            if(result.code == 200) {
                item.is_completed = 0;
                this.setState(this.state);
            }
        }.bind(this));
    },
    getProjectName: function(id) {
        return ProjectData.source[id].name;
    },
    getInitialState: function() {
        return {item: this.props.item}
    },
    render: function() {
        var item = this.state.item;
        var tipName = ['tip'];
        if(Utils.now() > item.deadline) tipName.push('later');
        return <div className="select_list_row">
            <div className="check"><CheckBox onChange={this.taskToggle.bind(this, item)} checked={!!item.is_completed} /></div>
            <div className="text">
                <div className="top_block">
                    <span className="title">{item.title}</span>
                    {
                        !item.deadline ? null :
                            <span className={tipName.join(' ')}>{Utils.formatDate(item.deadline, 'MM月DD日')}</span>
                    }
                </div>
                {
                    !this.props.bottomBlock ? null :
                        <div className="bottom_block">
                            <span className="brand">{this.getProjectName(item.project)}</span>
                        </div>
                }
                <div className="touch_area" onClick={Utils.goto.bind(Utils, 'detail', item._id)}></div>
            </div>
            <div className="option">
                {this.props.children}
            </div>
        </div>
    }
});