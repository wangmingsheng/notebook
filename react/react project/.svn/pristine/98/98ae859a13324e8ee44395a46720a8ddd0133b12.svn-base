var SwitchBox = require('../../components/SwitchBox');
var PushUpDialog = require('../../components/PushUpDialog');
var AcrossMbShow = require('../../components/AcrossMbShow');
var Member = require('../../components/Member');

module.exports = React.createClass({
	goto: function() {
		Utils.setUrl('/myjoinedtask');
		var ModuleManage = require('../Manage');
		ModuleManage.getModule('myjoinedtask', function(Virtual) {
			Event.trigger('SwitchModule', <Virtual/>);
		});
	},
	completed: function() {
		var param = this.state.value;
		// history.back();
/*		TaskHandle.create(this.state.value.projectId, param, function(result) {
			if(result.code == 200) {
				history.back();
			}
		});*/
	},
	pushOutDialog: function() {
		this.setState({selectDialog: true});
	},
	pushInDialog: function() {
		this.state.selectDialog = false;
		this.state.value.assign = this.refs.member.getSelectedData();
		this.setState(this.state);
		this.setThisHead();
	},
	taskTittle: function(ev) {
		this.state.value.title = $(ev.currentTarget).val();
	},
	switchEvent: function() {
		this.state.value.visibility = !this.state.value.visibility;
		this.setState(this.state);
	},
	setThisHead: function() {
		var headObject = {title: '新建任务', back: '后退', operat: {text: '完成', event: this.completed}};
		Interface.setHeader(headObject);
	},
    transformHaXi: function(obj) {
	    var result = {};
        for(var i in obj) {
            if(obj[i]) result[i] = true;
        }
        return result;
    },
    transformArr: function(obj) {
        var result = [];
        var j = 0;
        for(var i in obj) {
            if(obj[i]) result[j++] = obj[i];
        }
        return result;
    },
	getInitialState: function() {
		this.setThisHead();
		var value = { projectId:'', assign: {}, deadline: 0, entry: "", title: "", visibility: true};
		return {value:value, selectDialog: false};
	},
	render: function() {
		return <div className="newtask_page">
					<ul>
						<li><input type="text" placeholder="任务名称" onChange={this.taskTittle} /></li>
					</ul>
					<ul className="jump_option_list">
						<li onClick={this.pushOutDialog}>
                            <div className="option">
                                <span>分配给</span>
                                <div className="show"><AcrossMbShow data={this.transformArr(this.state.value.assign)} /></div>
                            </div>
                            <div className="right_block"><span className="tip"></span><i className="icon">&#xe606;</i></div>
                        </li>
						<li><div className="option"><span>截止时间</span></div><span className="right_block"><span className="tip"></span><i className="icon">&#xe606;</i></span></li>
					</ul>
					<ul className="jump_option_list">
						<li><div className="option"><span>私密任务</span></div><span className="right_block"><SwitchBox checked={this.state.value.visibility} onChange={this.switchEvent}/></span></li>
					</ul>
					<PushUpDialog position={this.state.selectDialog} pushIn={this.pushInDialog}>
							<Member ref="member" selected={this.transformHaXi(this.state.value.assign)} />
					</PushUpDialog>
			</div>
	}
});
