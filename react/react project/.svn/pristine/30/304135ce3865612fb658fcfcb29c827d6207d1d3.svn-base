var keyId = 0;
module.exports = React.createClass(
    {
        getDefaultProps: function() {
            return {play: false}
        },
        audioSwitch: function(value) {
            value && this.refs.audioDom.play() || this.refs.audioDom.pause();
            this.setState({play: value});
        },
        clickEvent: function() {
            if(!this.state.canPlay) return;
            Event.trigger('onVoicePlay', this.state.keyId);
            this.audioSwitch(!this.state.play);
        },
        onEnded: function() {
            this.setState({play: false});
        },
        onCanPlay: function() {
            this.setState({canPlay: true});
        },
        onVoicePlay: function(keyId) {
            if(keyId == this.state.keyId) return;
            this.audioSwitch(false);
        },
        componentDidMount: function() {
            Event.on('onVoicePlay', this.onVoicePlay);
        },
        componentWillUnmount: function() {
            Event.off('onVoicePlay', this.onVoicePlay);
        },
        getInitialState: function() {
            return {play: this.props.play, canPlay: false, keyId: keyId++}
        },
        render: function() {
            var name = ["voiceplay"];
            if(this.state.play) name.push('play');
            return  <div className={name.join(' ')} onClick={this.clickEvent}>
                <div className="small"></div>
                <div className="middle"></div>
                <div className="large"></div>
                <audio ref="audioDom" controls="controls" onCanPlay={this.onCanPlay} onEnded={this.onEnded}>
                    {this.props.children}
                </audio>
            </div>
        }
    }
);