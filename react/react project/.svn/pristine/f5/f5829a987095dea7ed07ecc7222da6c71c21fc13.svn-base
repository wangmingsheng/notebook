function DataFactory() {
	this.source = {};
	this.eventList = {};
}

DataFactory.prototype = Object.create({}, {
	on: {value: function (eventType, func) {
		if (this.eventList[eventType]) {
			this.eventList[eventType].push(func);
			return this;
		}
		this.eventList[eventType] = [func];
		return this;		
	}},

	off: {value: function (eventType, func) {
		if (typeof(func) != 'function') {
			delete this.eventList[eventType];
			return this;
		}

		for (var i = this.eventList[eventType].length - 1; i >= 0; i--) {
			if (this.eventList[eventType][i] == func) this.eventList[eventType].splice(i, 1);
		}
		return this;
	}},

	trigger: {value: function (eventType) {
		var data = Array.prototype.slice.call(arguments, 1);
		if (!this.eventList[eventType]) return this;

		for (var i = 0; i < this.eventList[eventType].length; i++) {
			this.eventList[eventType][i].apply(null, data);
		}
		return this;
	}}

});

module.exports = DataFactory;