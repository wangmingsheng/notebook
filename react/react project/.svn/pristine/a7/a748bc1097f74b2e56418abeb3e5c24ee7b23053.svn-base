var DataFactory = require('./DataFactory');

var Department = require('./Department');

function MemberData() {}

MemberData.prototype = Object.create(new DataFactory, {
	/// 获取当前成员信息
	get: {
		value: function(teamId, callback) {
			Forms.get({
				uri: '/teams/' + teamId + '/member',
				callback: function(e) {
					this.profile = e.data || {};
					typeof(callback) == 'function' && callback(e);
				}.bind(this)
			});
		}
	},
	/// 获取所有成员信息
	getList: {
		value: function(teamId, callback) {
			var data = Interface.getMember();
			if (data) {
				var items = {};
				for (var i = 0; i < data.length; i++) {
					items[data[i]._id] = data[i];
				}
				this.source = items;
				return true;
			}

			Forms.get({
				uri: '/teams/' + teamId + '/members',
				callback: function(e) {
					if (e.code == 200) {
						var data = e.data;
						if (data) {
							var items = {};
							for (var i = 0; i < data.length; i++) {
								items[data[i]._id] = data[i];
							}
							this.source = items;
						}
					}

					typeof(callback) == 'function' && callback(e);
				}.bind(this)
			});
		}
	},
	/// 获取成员集合
	getCollect: {
		value: function(deptId, isAll) {
			var _memberList = [];
			var _dataList = this.source || {};
			var _underDeptList = [];
			var _noAssigneDeptId = Utils.md5('').toLowerCase();
			if (deptId != _noAssigneDeptId && Department.source[deptId] && Department.source[deptId].under_ids) {
				_underDeptList = Department.source[deptId].under_ids.split(',');
			}
			for (var i in _dataList) {
				if (_dataList[i].is_deleted == 1) continue;
				if (isAll != true && (_dataList[i].status != 1 || _dataList[i].enabled != 1)) continue;
				if (!deptId || _dataList[i].department == deptId || (deptId == _noAssigneDeptId && _dataList[i].department == '') || $.inArray(_dataList[i].department, _underDeptList) != -1) {
					_memberList.push(_dataList[i]);
				}
			}
			return _memberList;
		}
	}
});

MemberData.prototype.constructor = MemberData;

module.exports = new MemberData;