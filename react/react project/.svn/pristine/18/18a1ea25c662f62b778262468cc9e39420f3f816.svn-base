module.exports = {
	setUrl: function(href) {
		if (href.replace(location.origin, '') != location.href.replace(location.origin, '')) {
			Interface.webPushInfo(location.pathname + location.search + location.hash);
			history.pushState(null, null, href);
			return true;
		}
		return false;
	},
	validateMember: function(item) {
		if (!item || item.is_deleted == 1 || item.enabled != 1 || item.status != 1) return false;
		return true;
	},
	screenState: function(state) {
		Config.locked = state;
	},
	formatDate: function(datetime, format) {
		if (!format) format = 'YYYY-MM-DD HH:mm';
		if (typeof(datetime) == 'string') {
			datetime = datetime.replace(/\-/g, '/');
			datetime = new Date(datetime);
		} else if (typeof(datetime) == 'number') {
			datetime = new Date(datetime * 1000);
		} else if (!(datetime instanceof Date)) {
			datetime = new Date();
		}

		var week = ['日', '一', '二', '三', '四', '五', '六'];
		return format.replace(/YYYY|YY|MM|DD|HH|hh|mm|SS|ss|week/g, function(key) {
			switch (key) {
				case 'YYYY': return datetime.getFullYear();
				case 'YY': return (datetime.getFullYear() + '').slice(2);
				case 'MM': return datetime.getMonth() + 1 < 10 ? '0' + (datetime.getMonth() + 1) : datetime.getMonth() + 1;
				case 'DD': return datetime.getDate() < 10 ? '0' + datetime.getDate() : datetime.getDate();
				case 'HH':
				case 'hh': return datetime.getHours() < 10 ? '0' + datetime.getHours() : datetime.getHours();
				case 'mm': return datetime.getMinutes() < 10 ? '0' + datetime.getMinutes() : datetime.getMinutes();
				case 'SS':
				case 'ss': return datetime.getSeconds() < 10 ? '0' + datetime.getSeconds() : datetime.getSeconds();
				case 'week': return week[datetime.getDay()];
			}
		});
	},
	filterHHmm00: function(timeStr) {
		switch(timeStr) {
			case '00:00':
				return '';
		}
		return timeStr;
	},
	transHaXiToStr: function(obj) {
		var arr = [];
		for(var i in obj) {
			if(obj[i]) arr.push(i);
		}
		return arr.join(',').trim();
	},
	goto: function(module, param) {
		var temParam = [];
		switch(param && typeof(param)) {
			case false:
				break;
			case 'string':
			case 'number':
				temParam = [param];
				break;
			case 'object':
				if(Array.isArray(param)) temParam = param;
				break;
		}
		this.setUrl('/' + module + '/' + temParam.join(''));
		Event.trigger('SwitchModule', module, temParam);
	},
	closeKeyBord: function(dom) {
		if(dom) return dom.blur();
		console.log('closeKeyBord Dom cannot find');
	},
	now: function() {
		return parseInt((new Date()).getTime() / 1000);
	},
	strLength: function(str) {
		return str.replace(/[^\x00-\xff]/g,"rr").length;
	},
	subStrSize: function(str, start, end) {
		var result = [];
		var arr = str.split('');
		if(start < 0) start = start + arr.length + 1;
		for(var i = 0, size = 0; i < arr.length; i++) {
			if(!end && size >= start) result.push(arr[i]);

			if(end && size >= start && size <= end) result.push(arr[i]);
			if(end && size > end) break;
			if(arr[i].match(/[^\x00-\xff]/g))
			{
				size += 2;
				continue;
			}
			size++;
		}
		return result.join('');
	}
};