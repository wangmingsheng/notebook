var SwipeLi = React.createClass({
    touchObject: {startPosition: {}, endPosition: {}, deltaX: 0},
    touchStartEvent: function(e) {
        $(e.currentTarget).css('transition', 'left 0s');
        var touch = e.changedTouches[0];
        var dom = e.currentTarget;
        if(!dom.style.left) dom.style.left = 0;
        this.touchObject.startPosition = {
            x: touch.pageX,
            y: touch.pageY
        }
    },
    touchMoveEvent: function(e) {
        var touch = e.changedTouches[0];
        var dom = e.currentTarget;
        var startPosition = this.touchObject.startPosition;
        var endPosition = this.touchObject.endPosition = {
            x: touch.pageX,
            y: touch.pageY
        };

        var deltaX =this.touchObject.deltaX = endPosition.x - startPosition.x;
            if(parseInt(dom.style.left) > -140 && deltaX < 0 && deltaX > -140) dom.style.left = deltaX + 'px';
            if(parseInt(dom.style.left) < 0 && deltaX > 0 && deltaX < 140) dom.style.left = (deltaX - 140) + 'px';
    },
    touchEndEvent: function(e) {
        var dom = e.currentTarget;
        var deltaX =this.touchObject.deltaX;
        $(e.currentTarget).css('transition', 'left .3s');
        if(deltaX < 0) { // 向左划动
            if(Math.abs(deltaX) > 70) dom.style.left = -140 + 'px';
            if(Math.abs(deltaX) <= 70) dom.style.left = 0 + 'px';
        } else if (deltaX > 0) { // 向右划动
            if(Math.abs(deltaX) > 70) dom.style.left = 0 + 'px';
            if(Math.abs(deltaX) <= 70) dom.style.left = -140 + 'px';
        }
    },
    getInitialState: function() {
        return {};
    },
    render: function() {

        return <li onTouchStart={this.touchStartEvent} onTouchMove={this.touchMoveEvent} onTouchEnd={this.touchEndEvent}>
            {this.props.children}
            </li>
    }
});

module.exports = SwipeLi;