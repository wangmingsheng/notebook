/*
 正则理解：就是用于查找、匹配和替换字符串的一种方法。

 优先级：
 1、 \             转义符
 2、() []          圆括号 中括号
 3、*，+，？，{}    限定符
 4、^,$            位置

 字符类匹配
 字符	匹配
 [...]	方括号内的任意字符
 1	    不在方括号内的任意字符
 .	    除了换行符和其他Unicode行终止符之外的任意字符
 \w	    任何ASCII字符组成的单词，等价于[a-zA-Z0-9]
 \W	    任何不是ASCII字符组成的单词，等价于2
 \s	    任何Unicode空白符
 \S	    任何非Unicode空白符的字符
 \d	    任何ASCII数字，介于[0-9]
 \D	    除了ASCII数字之外的任何字符，等价于3
 \b	    退格直接量

 重复字符匹配 {},?,+,*

 字符类:锚字符 匹配
 $	匹配字符串的结尾，在多行检索中，匹配一行的结尾
 ^	匹配字符串的开头，在多行检索中，匹配一行的开头
 \A	只有匹配字符串开始处
 \b	匹配单词边界,词在 []内时无效
 \B	匹配非单词边界
 \G	匹配当前搜索的开始位置
 \Z	匹配字符串结束处或行尾
 \z	只匹配字符串结束处

 字符类:记录字符 匹配
 (string)	用于反向引用的分组
 \1 或$1	匹配第一个分组中的内容
 \2 或$2	匹配第二个分组中的内容
 \3 或$3	匹配第三个分组中的内容

 正则表达式修饰符
 字符      含义
 i        执行不区分大小写的匹配
 g        执行一个全局匹配，即找到所有匹配而非一次匹配
 m        多行匹配模式，^匹配一行的开头和字符串开头，$匹配行的结束和字符串的结尾

 String 对象中的正则表达式方法
 方法	含义
 match(pattern)	                返回 pattern 中的子串或 null
 replace(pattern, replacement)	用 replacement 替换 pattern
 search(pattern)	            返回字符串中 pattern 开始位置
 split(pattern)	                返回字符串按指定 pattern 拆分的数组

 */

//example:

