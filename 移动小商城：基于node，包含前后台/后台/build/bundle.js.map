{"version":3,"sources":["webpack:///webpack/bootstrap 5e2245415c74893a6ddf","webpack:///external \"mongoose\"","webpack:///./proxy/index.js","webpack:///./config.js","webpack:///external \"bluebird\"","webpack:///external \"path\"","webpack:///external \"log4js\"","webpack:///external \"fs\"","webpack:///./common/jwtauth.js","webpack:///external \"crypto\"","webpack:///./middlewares/jwtauth.js","webpack:///./models/user.js","webpack:///external \"formidable\"","webpack:///external \"request\"","webpack:///./bin/www.js","webpack:///./app.js","webpack:///external \"express\"","webpack:///external \"express-handlebars\"","webpack:///external \"serve-favicon\"","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"express-session\"","webpack:///external \"cors\"","webpack:///external \"connect\"","webpack:///external \"express-jwt\"","webpack:///external \"session-mongoose\"","webpack:///./db/mongo.js","webpack:///external \"mongoomise\"","webpack:///./common/mkdirs.js","webpack:///./common/logger.js","webpack:///./middlewares/tools.js","webpack:///./common/paginate.js","webpack:///./common/tools.js","webpack:///external \"jsonwebtoken\"","webpack:///./db/redis.js","webpack:///external \"redis\"","webpack:///./routes/index.js","webpack:///./controllers/common.js","webpack:///external \"cheerio\"","webpack:///external \"captchapng\"","webpack:///./proxy/RestBase.js","webpack:///./proxy/FeatureBase.js","webpack:///./models/banner.js","webpack:///./models/classify.js","webpack:///./models/goods.js","webpack:///./models/cart.js","webpack:///./models/address.js","webpack:///./models/order.js","webpack:///./models/help.js","webpack:///./proxy/user.js","webpack:///./proxy/upload.js","webpack:///./models/upload.js","webpack:///./controllers/qiniu.js","webpack:///external \"qn\"","webpack:///./controllers/banner.js","webpack:///./controllers/classify.js","webpack:///./controllers/goods.js","webpack:///./controllers/cart.js","webpack:///./controllers/address.js","webpack:///./controllers/order.js","webpack:///./controllers/help.js","webpack:///./controllers/user.js"],"names":["banner","classify","goods","cart","address","order","help","user","upload","secret","mongo","development","connectionString","production","redis","tmp","path","superAdmin","username","password","orderStatus","wechat","appid","TOKEN_SECRET","setToken","id","sign","expiresIn","setMd5","value","createHash","update","digest","Middlewares","redisClient","TOKEN_EXPIRATION","TOKEN_EXPIRATION_SEC","headers","authorization","part","split","length","req","res","next","token","getToken","get","err","reply","tools","setJson","findByIdAsync","then","doc","Object","assign","_id","avatar","catch","set","expire","MAX_LOGIN_ATTEMPTS","LOCK_TIME","Schema","String","tel","Number","email","nickname","gender","birthday","Date","loginAttempts","type","required","default","lockUntil","create_at","now","update_at","reasons","statics","failedLogin","NOT_FOUND","PASSWORD_INCORRECT","MAX_ATTEMPTS","virtual","methods","comparePassword","candidatePassword","incLoginAttempts","updateAsync","$set","$unset","updates","$inc","isLocked","getAuthenticated","findOneAsync","model","process","env","PORT","port","server","listen","console","log","app","mkdirsSync","SessionStore","mongodb","store","url","dblink","auth","join","__dirname","engine","layoutsDir","defaultLayout","extname","helpers","time","body","use","connectLogger","level","format","json","urlencoded","extended","static","cookie","maxAge","resave","saveUninitialized","indexOf","render","verifyToken","bind","Error","status","layout","message","error","Mongo","config","init","opts","socketOptions","keepAlive","connect","connection","on","promisifyAll","dirpath","mode","existsSync","pathtmp","sep","forEach","dirname","mkdirSync","mkdirs","callback","exists","exitsmain","pathlist","pathlistlength","pathlistlengthseed","mkdir_auto_next","callresult","mkdir","isok","name","logger","getLogger","setLevel","configure","appenders","filename","maxLogSize","backups","category","replaceConsole","paginate","jwt","Paginate","page","perPage","total","pages","parseInt","item","prev","hasNext","hasPrev","Tools","code","data","meta","file","types","min","max","Math","floor","random","size","result","allChar","charAt","rand","randString","parse","getFilenameExt","Array","isArray","obj","isFunction","TYPED_ARRAY_REGEXP","isNumber","test","isFinite","str","isString","trim","replace","items","i","arr","prototype","call","array","index","splice","date","minutes","getTime","setMinutes","getMinutes","pretty","isUndefined","undefined","JSON","stringify","src","copyIsArray","copy","options","clone","target","arguments","deep","isPlainObject","extend","getProto","getPrototypeOf","class2type","toString","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","proto","Ctor","constructor","attr","keys","o","key","map","a","isObject","isDate","toISOString","toJson","pctEncodeSpaces","encodeURIComponent","that","parts","v","push","encodeUriQuery","serializeValue","serializedParams","paramSerializer","redisLink","NODE_ENV","createClient","fs","Ctrl","routes","post","uploadFile","delFile","signCheck","captcha","form","IncomingForm","encoding","uploadDir","keepExtensions","maxFieldsSize","maxFields","fields","files","initFormidable","tempfilepath","filenewname","randFilename","filenewpath","renameAsync","newAndSave","filepath","findById","params","remove","unlinkAsync","width","height","session","color","img","getBase64","imgbase64","Buffer","end","RestBase","query","limit","skip","sort","findAsync","save","upsert","new","findOneAndUpdate","findOneAndRemove","FeatureBase","suffix","instanceSource","Query","Model","modelStaticsList","self","getPromise","getResolver","from","Promise","resolver","lift","promise","method","args","context","resolve","reject","receivedArgs","shift","apply","find","populate","exec","findOne","title","remark","is_show","Boolean","images","ObjectId","Types","ref","price","amount","totalAmount","is_def","payAmount","payTime","recipientName","recipientGender","recipientTel","recipientAddress","content","Common","initClient","download","saveAsURL","stat","move","delete","list","imageInfo","imageExif","imageView","imageMogr","watermark","md2html","qrcode","client","create","accessKey","secretKey","bucket","origin","k1","k2","opt","docs","exif","getAll","put","all","countAsync","search","keyword","select","findAndPopulateAsync","findOneAndPopulateAsync","pattern","RegExp","aggregate","$match","$group","num","$sum","clear","p1","p2","abs","removeAsync","setDefault","getDefault","findOneAndUpdateAsync","address_id","$in","n","m","initSuperAdmin","wechatSignUp","wechatSignIn","signUp","signIn","signOut","resetPassword","saveInfo","getInfo","reslove","requestAsync","getSessionKey","errmsg","errcode","openid","findByName","expireToken","locals","oldpwd","newpwd"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5e2245415c74893a6ddf","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 0\n// module chunks = 0","import RestBase from './RestBase'\nimport banner from '../models/banner'\nimport classify from '../models/classify'\nimport goods from '../models/goods'\nimport cart from '../models/cart'\nimport address from '../models/address'\nimport order from '../models/order'\nimport help from '../models/help'\nimport user from './user'\nimport upload from './upload'\n\nexport default {\n\tbanner  : new RestBase(banner), \n\tclassify: new RestBase(classify), \n\tgoods   : new RestBase(goods), \n\tcart    : new RestBase(cart), \n\taddress : new RestBase(address), \n\torder   : new RestBase(order), \n\thelp    : new RestBase(help), \n\tuser    : user, \n\tupload  : upload, \n}\n\n\n// WEBPACK FOOTER //\n// ./proxy/index.js","export default {\n\tsecret: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\tmongo: {\n\t\tdevelopment: {\n\t\t\tconnectionString: 'mongodb://127.0.0.1:27017/mall'\n\t\t},\n\t\tproduction: {\n\t\t\tconnectionString: 'mongodb://127.0.0.1:27017/mall'\n\t\t}\n\t},\n\tredis: {\n\t\tdevelopment: {\n\t\t\tconnectionString: 'redis://127.0.0.1:6379'\n\t\t},\n\t\tproduction: {\n\t\t\tconnectionString: 'redis://127.0.0.1:6379',\n\t\t}\n\t},\n\tupload: {\n\t\ttmp : 'public/tmp/',\n\t\tpath: 'public/uploads/'\n\t},\n\tsuperAdmin: {\n\t\tusername: 'admin', \n\t\tpassword: '123456', \n\t},\n\torderStatus: {\n\t\t'submitted': '已提交', \n\t\t'canceled' : '已取消', \n\t\t'confirmed': '已确认', \n\t\t'finished' : '已完成', \n\t},\n\twechat: {\n\t\tappid: 'wx4ec54c44008298ec', \n\t\tsecret: '8295e6dd753aab17624e0bb0e1c4e98d', \n\t},\n}\n\n\n// WEBPACK FOOTER //\n// ./config.js","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"log4js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"log4js\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 6\n// module chunks = 0","import jwt from 'jsonwebtoken'\nimport crypto from 'crypto'\nimport config from '../config'\n\nexport default {\n\tTOKEN_SECRET: config.secret,\n\tsetToken(id) {\n\t\treturn jwt.sign({\n\t\t\tid: id\n\t\t}, this.TOKEN_SECRET, { \n\t\t\texpiresIn: 60 * 60\n\t\t})\n\t},\n\tsetMd5(value) {\n\t\treturn crypto.createHash('md5').update(value).digest('hex')\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./common/jwtauth.js","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 8\n// module chunks = 0","import redis from '../db/redis'\nimport User from '../models/user'\n\nclass Middlewares{\n\tconstructor() {\n\t\tthis.redisClient          = redis.redisClient\n\t\tthis.TOKEN_EXPIRATION     = 60\n\t\tthis.TOKEN_EXPIRATION_SEC = this.TOKEN_EXPIRATION * 60\n\t}\n\n\t/**\n\t * get token        \n\t */\n\tgetToken(headers) {\n\t\tif (headers && headers.authorization) {\n\t\t\tconst authorization = headers.authorization\n\t\t\tconst part = authorization.split(' ')\n\n\t\t\tif (part.length == 2) {\n\t\t\t\treturn part[1]\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n\n\t/**\n\t * Middleware for token verification       \n\t */\n\tverifyToken(req, res, next) {\n\t\tconst token = this.getToken(req.headers)\n\n\t\tthis.redisClient.get(token, (err, reply) => {\n\t\t\tif (err) return res.tools.setJson(500, '服务器错误')\n\t\t\tif (reply) return res.tools.setJson(401, '无权访问')\n\n\t\t\tUser.findByIdAsync(req.user.id)\n\t\t\t.then(doc => {\n\t\t\t\tif (!doc) return res.tools.setJson(1, '用户不存在')\n\t\t\t\tObject.assign(req.user, {\n\t\t\t\t\t_id     : doc._id, \n\t\t\t\t\tusername: doc.username, \n\t\t\t\t\tavatar  : doc.avatar, \n\t\t\t\t})\n\t\t\t\treturn next()\n\t\t\t})\n\t\t\t.catch(err => next(err))\n\t\t})\n\t}\n\n\t/**\n\t * redis set key\n\t */\n\texpireToken(headers) {\n\t\tconst token = this.getToken(headers)\n\t\t\n\t\tif (token != null) {\n\t\t\tthis.redisClient.set(token, true)\n\t    \tthis.redisClient.expire(token, this.TOKEN_EXPIRATION_SEC)\n\t\t}\n\t}\n}\n\nexport default Middlewares\n\n\n// WEBPACK FOOTER //\n// ./middlewares/jwtauth.js","import mongoose from 'mongoose'\nimport crypto from 'crypto'\n\nconst MAX_LOGIN_ATTEMPTS = 5\nconst LOCK_TIME          = 2 * 60 * 60 * 1000\n\nconst Schema = mongoose.Schema({\n\tusername : String,\n\tpassword : String,\n\tavatar   : String,\n\ttel      : Number,\n\temail    : String,\n\tnickname : String,\n\tgender   : String,\n\tbirthday : Date,\n\tloginAttempts: { \n\t\ttype    : Number, \n\t\trequired: true, \n\t\tdefault : 0, \n\t},\n    lockUntil: { \n    \ttype: Number, \n    },\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nconst reasons = Schema.statics.failedLogin = {\n\tNOT_FOUND         : 0,\n\tPASSWORD_INCORRECT: 1,\n\tMAX_ATTEMPTS      : 2,\n}\n\nSchema.virtual('isLocked').get(function() {\n    return !!(this.lockUntil && this.lockUntil > Date.now())\n})\n\nSchema.methods.comparePassword = function(candidatePassword) {\n\treturn crypto.createHash('md5').update(candidatePassword).digest('hex') === this.password\n}\n\nSchema.methods.incLoginAttempts = function() {\n    // if we have a previous lock that has expired, restart at 1\n    if (this.lockUntil && this.lockUntil < Date.now()) {\n        return this.updateAsync({\n            $set: { loginAttempts: 1 },\n            $unset: { lockUntil: 1 }\n        })\n    }\n    // otherwise we're incrementing\n    const updates = { $inc: { loginAttempts: 1 } }\n    // lock the account if we've reached max attempts and it's not locked already\n    if (this.loginAttempts + 1 >= MAX_LOGIN_ATTEMPTS && !this.isLocked) {\n        updates.$set = { lockUntil: Date.now() + LOCK_TIME }\n    }\n    return this.updateAsync(updates)\n}\n\nSchema.statics.getAuthenticated = function(username, password) {\n    return this.findOneAsync({username: username})\n    .then(doc => {\n    \t// make sure the user exists\n    \tif (!doc) {\n    \t\treturn reasons.NOT_FOUND\n    \t}\n    \t// check if the account is currently locked\n    \tif (doc.isLocked) {\n    \t\treturn doc.incLoginAttempts().then(() => reasons.MAX_ATTEMPTS)\n    \t}\n    \t// test for a matching password\n    \tif (doc.comparePassword(password)) {\n    \t\t// if there's no lock or failed attempts, just return the doc\n    \t\tif (!doc.loginAttempts && !doc.lockUntil) return doc\n    \t\t// reset attempts and lock info\n    \t\tconst updates = {\n                $set: { loginAttempts: 0 },\n                $unset: { lockUntil: 1 }\n            }\n            return doc.updateAsync(updates).then(() => doc)\n    \t}\n    \t// password is incorrect, so increment login attempts before responding\n    \treturn doc.incLoginAttempts().then(() => reasons.PASSWORD_INCORRECT)\n    })\n}\n\nexport default mongoose.model('user', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/user.js","module.exports = require(\"formidable\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"formidable\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"request\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"request\"\n// module id = 12\n// module chunks = 0","// #!/usr/bin/env node\n\nimport app from '../app'\n\napp.set('port', process.env.PORT || 3000)\n\nconst port = app.get('port')\nconst server = app.listen(port, () => {\n    console.log('------ Express server listening on port ' + server.address().port + ' ------')\n})\n\n\n// WEBPACK FOOTER //\n// ./bin/www.js","import express from 'express'\nimport exphbs from 'express-handlebars'\nimport path from 'path'\nimport favicon from 'serve-favicon'\nimport log4js from 'log4js'\nimport bodyParser from 'body-parser'\nimport cookieParser from 'cookie-parser'\nimport session from 'express-session'\nimport cors from 'cors'\nimport connect from 'connect'\nimport jwt from 'express-jwt'\nimport sessionMongoose from 'session-mongoose'\n\nimport mongo from './db/mongo'\nimport config from './config'\nimport mkdirs from './common/mkdirs'\nimport logger from './common/logger'\nimport tools from './middlewares/tools'\nimport jwtauth from './middlewares/jwtauth'\nimport routes from './routes'\n\nconst app = express()\nconst mkdirsSync = mkdirs.mkdirsSync\nconst SessionStore = sessionMongoose(connect)\nconst mongodb = new mongo(app, config)\nconst store = new SessionStore({ url: mongodb.dblink })\nconst auth = new jwtauth()\n\n// 判断文件夹是否存在, 若不存在则创建之\nmkdirsSync(config.upload.tmp)\nmkdirsSync(config.upload.path)\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'))\napp.set('view engine', 'hbs')\napp.engine('hbs', exphbs({\n    layoutsDir: path.join(__dirname, 'views/layouts/'),\n    defaultLayout: 'main',\n    extname: '.hbs',\n    helpers: {\n        time: Date.now,\n        body: '123456789'\n    }\n}))\n\napp.use(favicon(__dirname + '/public/favicon.ico'))\napp.use(log4js.connectLogger(logger('normal'), { level: 'auto', format: ':method :url :status' }))\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(express.static(path.join(__dirname, 'public')))\n\napp.use(cookieParser(config.secret))\n\n// set session.\napp.use(session({\n    store: store,\n    cookie: {\n        maxAge: 60000,\n    },\n    resave: false,\n    saveUninitialized: true,\n    secret: config.secret\n}))\n\napp.use(cors())\n\napp.use((req, res, next) => {\n    if (req.path.indexOf('/api') === -1) {\n        return res.render('index')\n    }\n    return next()\n})\n\n// index\n// app.get('/', (req, res) => {\n// \tres.render('index')\n// })\n\n// custom middleware\napp.use(/\\/api/, tools)\napp.use(/^((?!sign\\/up|sign\\/in|captcha).)+$/, [\n    jwt({ secret: config.secret }),\n    auth.verifyToken.bind(auth)\n])\n\n// 加载路由\nroutes(app)\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n    const err = new Error('Not Found')\n    err.status = 404\n        // res.status(404)\n        // res.send('Not Found')\n    next(err)\n})\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use((err, req, res, next) => {\n        console.log(err)\n        res.status(err.status || 500)\n        res.render('error', {\n            layout: false,\n            message: err.message,\n            error: err\n        })\n    })\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use((err, req, res, next) => {\n    res.status(err.status || 500)\n    res.render('error', {\n        layout: false,\n        message: err.message,\n        error: err\n    })\n})\n\n// app.listen(3000, '0.0.0.0')\n\nexport default app\n\n\n// WEBPACK FOOTER //\n// ./app.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"express-handlebars\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-handlebars\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"serve-favicon\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serve-favicon\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 20\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 21\n// module chunks = 0","module.exports = require(\"cors\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cors\"\n// module id = 22\n// module chunks = 0","module.exports = require(\"connect\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"connect\"\n// module id = 23\n// module chunks = 0","module.exports = require(\"express-jwt\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-jwt\"\n// module id = 24\n// module chunks = 0","module.exports = require(\"session-mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"session-mongoose\"\n// module id = 25\n// module chunks = 0","import bluebird from 'bluebird'\nimport mongoose from 'mongoose'\nimport mongoomise from 'mongoomise'\n\nclass Mongo{\n\tconstructor(app, config) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tconfig, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\tinit() {\n\t\tthis.env    = this.app.get('env')\n\t\tthis.dblink = this.config['mongo'][this.env]['connectionString']\n\n\t\tconst opts = {\n\t\t\tserver: {\n\t\t\t\tsocketOptions: { \n\t\t\t\t\tkeepAlive: 1 \n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmongoose\n\t\t\t.connect(this.dblink, opts)\n\t\t\t.connection\n\t\t\t.on('error', err => console.log('------ Mongodb connection failed ------' + err))\n\t\t\t.on('open', () => console.log('------ Mongodb connection succeed ------'))\n\n\t\tmongoomise.promisifyAll(mongoose, bluebird)\n\t}\n}\n\nexport default Mongo\n\n\n// WEBPACK FOOTER //\n// ./db/mongo.js","module.exports = require(\"mongoomise\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoomise\"\n// module id = 27\n// module chunks = 0","import fs from 'fs'\nimport path from 'path'\n\n// 创建多层文件夹 同步\nfunction mkdirsSync(dirpath, mode) {\n\tif (!fs.existsSync(dirpath)) {\n        let pathtmp\n        dirpath.split(path.sep).forEach(dirname => {\n            if (pathtmp) {\n                pathtmp = path.join(pathtmp, dirname)\n            } else {\n                pathtmp = dirname\n            }\n\n            if (!fs.existsSync(pathtmp)) {\n                if (!fs.mkdirSync(pathtmp, mode)) {\n                    return false\n                }\n            }\n        })\n    }\n    return true\n}\n\n// 创建多层文件夹 异步\nfunction mkdirs(dirpath, mode, callback) {\n    callback = callback || function() {}\n    fs.exists(dirpath, exitsmain => {\n        if (!exitsmain) {\n            //目录不存在\n            let pathtmp\n            let pathlist = dirpath.split(path.sep)\n            let pathlistlength = pathlist.length\n            let pathlistlengthseed = 0\n\n            mkdir_auto_next(mode, pathlist, pathlist.length, callresult => {\n                if (callresult) {\n                    callback(true)\n                } else {\n                    callback(false)\n                }\n            })\n        } else {\n            callback(true)\n        }\n    })\n}\n\n// 异步文件夹创建 递归方法\nfunction mkdir_auto_next(mode, pathlist, pathlistlength, callback, pathlistlengthseed, pathtmp) {\n    callback = callback || function() {}\n    if (pathlistlength > 0) {\n\n        if (!pathlistlengthseed) {\n            pathlistlengthseed = 0\n        }\n\n        if (pathlistlengthseed >= pathlistlength) {\n            callback(true)\n        } else {\n            if (pathtmp) {\n                pathtmp = path.join(pathtmp, pathlist[pathlistlengthseed])\n            } else {\n                pathtmp = pathlist[pathlistlengthseed]\n            }\n\n            fs.exists(pathtmp, exists => {\n                if (!exists) {\n                    fs.mkdir(pathtmp, mode, isok => {\n                        if (!isok) {\n                            mkdir_auto_next(mode, pathlist, pathlistlength, callresult => {\n                                callback(callresult)\n                            },\n                            pathlistlengthseed + 1, pathtmp)\n                        } else {\n                            callback(false)\n                        }\n                    })\n                } else {\n                    mkdir_auto_next(mode, pathlist, pathlistlength, callresult => {\n                        callback(callresult)\n                    },\n                    pathlistlengthseed + 1, pathtmp)\n                }\n            })\n        }\n    } else {\n        callback(true)\n    }\n}\n\nexport default {\n    mkdirsSync: mkdirsSync, \n    mkdirs: mkdirs, \n}\n\n\n// WEBPACK FOOTER //\n// ./common/mkdirs.js","import log4js from 'log4js'\n\nlog4js.configure({\n\tappenders: [\n\t\t{ \n\t\t\ttype: 'console', \n\t\t},\n\t\t{\n\t\t\ttype      : 'file', \n\t\t\tfilename  : 'logs/access.log', \n\t\t\tmaxLogSize: 1024,\n\t\t\tbackups   : 4,\n\t\t\tcategory  : 'normal', \n\t\t},\n\t],\n\treplaceConsole: true,\n})\n\nexport default function(name){\n\tconst logger = log4js.getLogger(name)\n\tlogger.setLevel('INFO')\n\treturn logger\n}\n\n\n// WEBPACK FOOTER //\n// ./common/logger.js","import paginate from '../common/paginate'\nimport tools from '../common/tools'\nimport jwt from '../common/jwtauth'\n\nexport default function(req, res, next) {\n\tres.paginate = paginate\n\tres.tools = new tools(req, res)\n\tres.jwt   = jwt\n\tnext()\n}\n\n\n// WEBPACK FOOTER //\n// ./middlewares/tools.js","class Paginate{\n\tconstructor(page, perPage, total) {\n\t\tObject.assign(this, {\n\t\t\tpage, \n\t\t\tperPage, \n\t\t\ttotal, \n\t\t})\n\t\tthis.init()\n\t}\n\n\t/**\n\t * init\n\t */\n\tinit() {\n\t\tif(!this.page || this.page < 1) {\n\t        this.page = 1\n\t    }\n\t    if(!this.perPage || this.perPage < 1) {\n\t        this.perPage = 10\n\t    }\n\t    if(!this.total || this.total < 0) {\n\t        this.total = 0\n\t    }\n\t    if(this.total % this.perPage === 0) {\n\t        this.pages = parseInt(this.total/this.perPage)\n\t    } else {\n\t        this.pages = parseInt(this.total/this.perPage) + 1\n\t    }\n\t    if(this.page > this.pages) {\n\t        this.page = this.pages\n\t    }\n\t    this.item = {\n\t\t\tpage   : this.page, \n\t\t\tpages  : this.pages, \n\t\t\tperPage: this.perPage, \n\t\t\ttotal  : this.total, \n\t\t\tprev   : this.prev(), \n\t\t\tnext   : this.next(), \n\t\t\thasNext: this.hasNext(), \n\t\t\thasPrev: this.hasPrev(), \n\t\t}\n\t}\n\n\t/**\n\t * 是否有上一页\n\t */\n\thasPrev() {\n\t    if(this.page > 1) return !0\n\t    return !1\n\t}\n\n\t/**\n\t * 上一页\n\t */\n\tprev() {\n\t    if(this.page <= 1) return 1\n\t    return this.page - 1\n\t}\n\n\t/**\n\t * 是否有下一页\n\t */\n\thasNext() {\n\t    if(this.page < this.pages) return !0\n\t    return !1\n\t}\n\n\t/**\n\t * 下一页\n\t */\n\tnext() {\n\t    if(this.page < this.pages) return this.page + 1\n\t    return this.pages\n\t}\n}\n\nexport default Paginate\n\n\n// WEBPACK FOOTER //\n// ./common/paginate.js","class Tools{\n\tconstructor(req, res) {\n\t\tObject.assign(this, {\n\t\t\treq, \n\t\t\tres, \n\t\t})\n\t}\n\n\t/**\n\t * API接口调用返回JSON格式内容\n\t * @param {Number} code    \n\t * @param {String} message \n\t * @param {Objext} data    \n\t */\n\tsetJson(code, message, data) {\n\t\treturn this.res.json({\n\t\t\tmeta: {\n\t\t\t\tcode: code || 0,\n\t\t\t\tmessage: message || null\n\t\t\t},\n\t\t\tdata: data || null\n\t\t})\n\t}\n\n\t/**\n\t * 返回文件后缀\n\t * @param  {Object} file \n\t * @return {String}      \n\t */\n\tgetFilenameExt(file) {\n\t    const types = file.name.split('.')\n\t    return types[types.length - 1]\n\t}\n\n\t/**\n\t * 返回指定范围内的一个整数\n\t * @param  {Number} min \n\t * @param  {Number} max \n\t * @return {String}      \n\t */\n\trand(min, max) {\n\t    return Math.floor(Math.random() * (max - min + 1) + min)\n\t}\n\n\t/**\n\t * 生成字符串组合\n\t * @param  {Number} size \n\t * @return {String}      \n\t */\n\trandString(size) {\n\t    let result  = ''\n\t    let allChar = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\t    \n\t    size = size || 1\n\n\t    while (size--) {\n\t        result += allChar.charAt(this.rand(0, allChar.length - 1))\n\t    }\n\t    \n\t    return result\n\t}\n\n\t/**\n\t * 生成文件名\n\t * @param  {Object} file \n\t * @return {String}      \n\t */\n\trandFilename(file) {\n\t\treturn this.randString(this.rand(10, 100)) + Date.parse(new Date()) + '.' + this.getFilenameExt(file)\n\t}\n\n\t/**\n\t * 判断某个元素是否为字符串\n\t * @param  {String}  value \n\t * @return {Boolean}       \n\t */\n\tisString(value) {\n\t\treturn typeof value === 'string'\n\t}\n\n\t/**\n\t * 判断某个元素是否为函数\n\t * @param  {Function}  value \n\t * @return {Boolean}     \n\t */\n\tisFunction(value) {\n\t\treturn this.type(value) === 'function'\n\t}\n\n\t/**\n\t * 判断某个元素是否为数组\n\t * @param  {Array}  value \n\t * @return {Boolean}       \n\t */\n\tisArray(value) {\n\t\treturn Array.isArray(value)\n\t}\n\n\t/**\n\t * 判断某个元素是否为对象\n\t * @param  {Obejct}  value \n\t * @return {Boolean}       \n\t */\n\tisObject(value) {\n\t\treturn value !== null && typeof value === 'object'\n\t}\n\n\t/**\n\t * 判断某个元素是否为数值\n\t * @param  {Number}  value \n\t * @return {Boolean}       \n\t */\n\tisNumber(value) {\n\t\treturn typeof value === 'number'\n\t}\n\n\t/**\n\t * 判断某个元素是否为日期\n\t * @param  {Date}  value \n\t * @return {Boolean}       \n\t */\n\tisDate(value) {\n\t\treturn this.type(value) === '[object Date]'\n\t}\n\n\t/**\n\t * 判断某个元素是否为正则表达式\n\t * @param  {RegExp}  value \n\t * @return {Boolean}       \n\t */\n\tisRegExp(value) {\n\t\treturn this.type(value) === '[object RegExp]'\n\t}\n\n\t/**\n\t * 判断某个元素是否为File对象\n\t * @param  {Object}  obj \n\t * @return {Boolean}     \n\t */\n\tisFile(obj) {\n\t\treturn this.type(obj) === '[object File]'\n\t}\n\n\t/**\n\t * 判断某个元素是否为FormData对象\n\t * @param  {Object}  obj \n\t * @return {Boolean}     \n\t */\n\tisFormData(obj) {\n\t\treturn this.type(obj) === '[object FormData]'\n\t}\n\n\t/**\n\t * 判断某个元素是否为Blob对象\n\t * @param  {Object}  obj \n\t * @return {Boolean}     \n\t */\n\tisBlob(obj) {\n\t\treturn this.type(obj) === '[object Blob]'\n\t}\n\n\t/**\n\t * 判断某个元素是否为布尔值\n\t * @param  {boolean}  value \n\t * @return {Boolean}       \n\t */\n\tisBoolean(value) {\n\t\treturn typeof value === 'boolean'\n\t}\n\n\t/**\n\t * 判断某个元素是否为Promise对象\n\t * @param  {Function}  obj \n\t * @return {Boolean}     \n\t */\n\tisPromiseLike(obj) {\n\t\treturn obj && this.isFunction(obj.then)\n\t}\n\n\t/**\n\t * 判断数组类型\n\t * @param  {Array}  value \n\t * @return {Boolean}       \n\t */\n\tisTypedArray(value) {\n\t\tconst TYPED_ARRAY_REGEXP = /^\\[object (?:Uint8|Uint8Clamped|Uint16|Uint32|Int8|Int16|Int32|Float32|Float64)Array\\]$/\n\t\treturn value && this.isNumber(value.length) && TYPED_ARRAY_REGEXP.test(this.type(value))\n\t}\n\n\t/**\n\t * 判断某个元素是否为ArrayBuffer对象\n\t * @param  {Object}  obj \n\t * @return {Boolean}     \n\t */\n\tisArrayBuffer(obj) {\n\t\treturn this.type(obj) === '[object ArrayBuffer]'\n\t}\n\n\t/**\n\t * 判断某个元素是否为defined\n\t * @param  {undefined}  value \n\t * @return {Boolean}       \n\t */\n\tisDefined(value) {\n\t\treturn typeof value !== 'undefined'\n\t}\n\n\t/**\n\t * 判断某个元素是否为undefined\n\t * @param  {undefined}  value \n\t * @return {Boolean}       \n\t */\n\tisUndefined(value) {\n\t\treturn typeof value === 'undefined'\n\t}\n\n\t/**\n\t * 判断某个元素是否为null\n\t * @param  {Null}  value \n\t * @return {Boolean}       \n\t */\n\tisNull(value) {\n\t\treturn value === null\n    }\n\n\t/**\n\t * 判断某个元素是否为有限数\n\t * @param  {Number}  value \n\t * @return {Boolean}       \n\t */\n\tisFinite(value) {\n      return typeof value == 'number' && isFinite(value)\n    }\n\n    /**\n     * 判断某个元素是否为自然数\n     * @param  {Number}  value \n     * @return {Boolean}       \n     */\n    isNaN(value) {\n      return this.isNumber(value) && value != +value\n    }\n\n    isError(value) {\n    \treturn this.type(value) === '[object Error]'\n    }\n\n\t/**\n\t * 删除字符串左右两端的空格\n\t * @param  {String} str \n\t * @return {String}     \n\t */\n\ttrim(str) {\n\t\treturn this.isString(str) ? str.trim() : str\n\t}\n\n\t/**\n\t * 字符串转义\n\t * @param  {String} str \n\t * @return {String}     \n\t */\n\tescapeForRegexp(str) {\n\t\treturn str.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1').replace(/\\x08/g, '\\\\x08')\n\t}\n\n\t/**\n\t * 字符串转对象\n\t * @param  {String} str 'key1,key2,...'\n\t * @return {Object} in the form of {key1:true, key2:true, ...}    \n\t */\n\tmakeMap(str) {\n\t\tlet obj = {}, items = str.split(',')\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tobj[items[i]] = !0\n\t\t}\n\t\treturn obj\n\t}\n\n\t/**\n\t * 判断数组中是否含有指定元素\n\t * @param  {Array} arr \n\t * @param  {Objext} obj \n\t * @return {Array}     \n\t */\n\tincludes(arr, obj) {\n\t\treturn Array.prototype.indexOf.call(arr, obj) != -1\n\t}\n\n\t/**\n\t * 数组删除指定的元素，并返回元素的索引值\n\t * @param  {Array} array \n\t * @param  {String} value \n\t * @return {Number}       \n\t */\n\tarrayRemove(array, value) {\n\t\tlet index = array.indexOf(value)\n\t\tif (index >= 0) {\n\t\t\tarray.splice(index, 1)\n\t\t}\n\t\treturn index\n\t}\n\n\t/**\n\t * 日期增加分钟\n\t * @param  {Date} date    \n\t * @param  {Number} minutes \n\t * @return {Date}\n\t */\n\taddDateMinutes(date, minutes) {\n\t\tdate = new Date(date.getTime())\n\t\tdate.setMinutes(date.getMinutes() + minutes || 0)\n\t\treturn date\n\t}\n\n\t/**\n\t * 对象解析出JSON字符串\n\t * @param  {Object} obj    \n\t * @param  {Number} pretty \n\t * @return {Object}        \n\t */\n\ttoJson(obj, pretty) {\n\t\tif (this.isUndefined(obj)) return undefined\n\t\tif (!this.isNumber(pretty)) {\n\t\t\tpretty = pretty ? 2 : null\n\t\t}\n\t\treturn JSON.stringify(obj, null, pretty)\n\t}\n\n\t/**\n\t * JSON字符串解析成对象\n\t * @param  {String} json \n\t * @return {Object}      \n\t */\n\tfromJson(json) {\n\t\treturn this.isString(json) ? JSON.parse(json) : json\n\t}\n\n\t/**\n\t * 扩展对象\n\t * @return {Object}\n\t */\n\textend() {\n\t\tlet src, copyIsArray, copy, name, options, clone,\n\t\t\ttarget = arguments[0] || {},\n\t\t\ti = 1,\n\t\t\tlength = arguments.length,\n\t\t\tdeep = !1;\n\n\t\tif (typeof target === 'boolean') {\n\t\t\tdeep = target\n\t\t\ttarget = arguments[ i ] || {}\n\t\t\ti++\n\t\t}\n\n\t\tif (typeof target !== 'object' && !this.isFunction(target)) {\n\t\t\ttarget = {}\n\t\t}\n\n\t\tif (i === length) {\n\t\t\ttarget = this\n\t\t\ti--\n\t\t}\n\n\t\tfor (; i < length; i++) {\n\t\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t\tfor (name in options) {\n\t\t\t\t\tsrc = target[name]\n\t\t\t\t\tcopy = options[name]\n\n\t\t\t\t\tif (target === copy) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tif (deep && copy && (this.isPlainObject(copy) || (copyIsArray = this.isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = !1\n\t\t\t\t\t\t\tclone = src && this.isArray(src) ? src : []\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && this.isPlainObject(src) ? src : {}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttarget[name] = this.extend(deep, clone, copy)\n\t\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\t\ttarget[name] = copy\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn target\n\t}\n\n\t/**\n\t * 判断传入的参数是否为纯粹的对象，即直接量{}或new Object()创建的对象\n\t * @param  {[type]}  obj [description]\n\t * @return {Boolean}     [description]\n\t */\n\tisPlainObject(obj) {\n\t\tlet getProto = Object.getPrototypeOf\n\t\tlet class2type = {}\n\t\tlet toString = class2type.toString\n\t\tlet hasOwn = class2type.hasOwnProperty\n\t\tlet fnToString = hasOwn.toString\n\t\tlet ObjectFunctionString = fnToString.call(Object)\n\t\tlet proto, Ctor\n\t\tif (!obj || this.type(obj) !== '[object Object]') {\n\t\t\treturn !1\n\t\t}\n\t\tproto = getProto( obj )\n\t\tif ( !proto ) {\n\t\t\treturn !0\n\t\t}\n\t\tCtor = hasOwn.call(proto, 'constructor') && proto.constructor\n\t\treturn typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString\n\t}\n\n\t/**\n\t * 判断对象是否为空\n\t * @param  {Object}  obj \n\t * @return {Boolean}     \n\t */\n\tisEmptyObject(obj) {\n\t\tfor (let i in obj)\n            return !1\n        return !0\n\t}\n\n\t/**\n\t * 判断对象的类型\n\t * @param  {Object} obj \n\t * @return {String}     \n\t */\n\ttype(obj) {\n\t\tconst toString = Object.prototype.toString\n\n\t\tif ( obj == null ) {\n\t\t\treturn obj + ''\n\t\t}\n\n\t\treturn typeof obj === 'object' || typeof obj === 'function' ? toString.call(obj) || 'object' : typeof obj\n\t}\n\n\t/**\n\t * 合并对象并返回一个新的对象，目标对象自身也会改变\n\t * @param  {Array} args \n\t * @return {Object}     \n\t */\n\tmerge(...args) {\n\t\treturn Object.assign(...args)\n\t}\n\n\t/**\n\t * 拷贝对象并返回一个新的对象\n\t * @param  {Object} obj \n\t * @return {Object}     \n\t */\n\tclone(obj) {\n\t    if (typeof obj !== 'object' || !obj) {\n\t        return obj\n\t    }\n\t    let copy = {}\n\t    for (let attr in obj) {\n\t        if (obj.hasOwnProperty(attr)) {\n\t            copy[attr] = obj[attr]\n\t        }\n\t    }\n\t    return copy\n\t}\n\n\t/**\n\t * 删除对象上的指定属性并返回一个新的对象\n\t * @param  {Object} obj  \n\t * @param  {Array} keys \n\t * @return {[type]}      \n\t */\n\tomit(obj, keys) {\n\t    let o = this.clone(obj)\n\t    keys.forEach(key => {\n\t        delete o[key]\n\t    })\n\t    return o\n\t}\n\n\t/**\n\t * 返回一个新数组，数组中的元素为指定属性的值\n\t * @param  {Array} arr \n\t * @param  {String} key \n\t * @return {Array}     \n\t */\n\tpluck(arr, key) {\n\t    if (typeof arr !== 'object' || arr.length === 0) {\n\t        return []\n\t    }\n\t    if (!key) {\n\t        return arr\n\t    }\n\t    return arr.map(a => a[key])\n\t}\n\n\t/**\n\t * 返回序列化的值\n\t * @param  {String} value \n\t * @return {String} \n\t */\n\tserializeValue(value) {\n\t\tif (this.isObject(value)) return this.isDate(value) ? value.toISOString() : this.toJson(value)\n\t\treturn value\n\t}\n\n\t/**\n\t * 编码URI\n\t * @param  {String} value \n\t * @param  {String} pctEncodeSpaces \n\t * @return {String} \n\t */\n\tencodeUriQuery(value, pctEncodeSpaces) {\n\t\treturn encodeURIComponent(value)\n\t\t.replace(/%40/gi, '@')\n\t\t.replace(/%3A/gi, ':')\n\t\t.replace(/%24/g, '$')\n\t\t.replace(/%2C/gi, ',')\n\t\t.replace(/%3B/gi, ';')\n\t\t.replace(/%20/g, (pctEncodeSpaces ? '%20' : '+'))\n\t}\n\n\t/**\n\t * 对象序列化\n\t * @param  {Object} obj \n\t * @return {String} \n\t */\n\tparamSerializer(obj) {\n\t\tif (!obj) return ''\n\t\tlet that = this\n\t\tlet parts = []\n\t\tfor(let key in obj) {\n\t\t\tconst value = obj[key]\n\t\t\tif (value === null || that.isUndefined(value)) return\n\t\t\tif (that.isArray(value)) {\n\t\t\t\tvalue.forEach(function(v) {\n\t\t\t\t\tparts.push(that.encodeUriQuery(key)  + '=' + that.encodeUriQuery(that.serializeValue(v)))\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tparts.push(that.encodeUriQuery(key) + '=' + that.encodeUriQuery(that.serializeValue(value)))\n\t\t\t}\n\t\t}\n\t\treturn parts.join('&')\n    }\n\n    /**\n\t * 拼接URL\n\t * @param  {String} obj \n\t * @param  {Object} obj \n\t * @return {String} \n\t */\n    buildUrl(url, obj) {\n    \tconst serializedParams = this.paramSerializer(obj)\n\t\tif (serializedParams.length > 0) {\n\t\t\turl += ((url.indexOf('?') == -1) ? '?' : '&') + serializedParams\n\t\t}\n\t\treturn url\n    }\n}\n\nexport default Tools\n\n\n// WEBPACK FOOTER //\n// ./common/tools.js","module.exports = require(\"jsonwebtoken\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jsonwebtoken\"\n// module id = 33\n// module chunks = 0","import redis from 'redis'\nimport config from '../config'\n\nconst redisLink = config['redis'][process.env.NODE_ENV || 'development']['connectionString']\nconst redisClient = redis.createClient(redisLink)\n\nredisClient\n\t.on('error', err => console.log('------ Redis connection failed ------' + err))\n\t.on('connect', () => console.log('------ Redis connection succeed ------'))\n\nexport default {\n\tredis: redis, \n\tredisClient: redisClient, \n}\n\n\n// WEBPACK FOOTER //\n// ./db/redis.js","module.exports = require(\"redis\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"redis\"\n// module id = 35\n// module chunks = 0","import common from '../controllers/common'\nimport qiniu from '../controllers/qiniu'\nimport banner from '../controllers/banner'\nimport classify from '../controllers/classify'\nimport goods from '../controllers/goods'\nimport cart from '../controllers/cart'\nimport address from '../controllers/address'\nimport order from '../controllers/order'\nimport help from '../controllers/help'\nimport user from '../controllers/user'\n\nexport default function(app) {\n\tnew common(app)\n\tnew qiniu(app)\n\tnew banner(app)\n\tnew classify(app)\n\tnew goods(app)\n\tnew cart(app)\n\tnew address(app)\n\tnew order(app)\n\tnew help(app)\n\tnew user(app)\n}\n\n\n// WEBPACK FOOTER //\n// ./routes/index.js","import bluebird from 'bluebird'\nimport FS from 'fs'\nimport formidable from 'formidable'\nimport request from 'request'\nimport cheerio from 'cheerio'\nimport captchapng from 'captchapng'\nimport proxy from '../proxy'\nimport config from '../config'\n\nconst fs = bluebird.promisifyAll(FS)\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tupload: proxy.upload, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.post('/api/common/file', this.uploadFile.bind(this))\n\t\tthis.app.post('/api/common/file/:id', this.delFile.bind(this))\n\t\tthis.app.post('/api/common/sign/check', this.signCheck.bind(this))\n\t\tthis.app.get('/api/common/captcha(/:width)?(/:height)?', this.captcha.bind(this))\n\t}\n\n\t/**\n\t * 创建表单上传           \n\t */\n\tinitFormidable(req, callback) {\n\t\t// 创建表单上传\n\t    const form = new formidable.IncomingForm()\n\n\t    // 设置编辑\n\t    form.encoding = 'utf-8'\n\n\t    // 设置文件存储路径\n\t    form.uploadDir = config.upload.tmp\n\n\t    // 保留后缀\n\t    form.keepExtensions = true\n\n\t    // 设置单文件大小限制    \n\t    form.maxFieldsSize = 2 * 1024 * 1024\n\n\t    // 设置所有文件的大小总和\n\t    form.maxFields = 1000 \n\n\t    form.parse(req, (err, fields, files) => callback(err, fields, files))\n\t}\n\n\t/**\n\t * @api {post} /common/file 上传文件\n\t * @apiDescription 上传文件\n\t * @apiName uploadFile\n\t * @apiGroup common\n\t *\n\t * @apiParam {File} files 文件\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /common/file\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"上传成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"name\": \"name\",\n\t *       \t\"path\": \"path\",\n\t *       \t\"create_at\": \"create_at\"\n\t *       }\n\t *     }\n\t */\n\tuploadFile(req, res, next) {\n\t\tthis.initFormidable(req, (err, fields, files) => {\n\t\t\tfor (let item in files) {\n\t\t\t\tconst file         = files[item] \n\t\t\t\tconst tempfilepath = file.path \n\t\t\t\tconst filenewname  = res.tools.randFilename(file) \n\t\t\t\tconst filenewpath  = config.upload.path +  filenewname\n\t\t\t\tconst result       = 'uploads/' + filenewname\n\n\t\t\t\t// 将临时文件保存为正式的文件\n\t\t\t\tfs.renameAsync(tempfilepath, filenewpath)\n\t\t\t\t.then(doc => this.upload.newAndSave(file.name, result))\n\t\t\t\t.then(doc => res.tools.setJson(0, '上传成功', doc))\n\t\t\t\t.catch(err => next(err))\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /common/file/:id 删除文件\n\t * @apiDescription 删除文件\n\t * @apiName delFile\n\t * @apiGroup common\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /common/file/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelFile(req, res, next) {\n\t\tlet filepath = null\n\t\tthis.upload.findById(req.params.id)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\tfilepath = 'public/' + doc.path\n\t\t\treturn doc.remove()\n\t\t})\n\t\t.then(doc => fs.unlinkAsync(filepath))\n\t\t.then(doc => res.tools.setJson(0, '删除成功'))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /common/sign/check 登录认证\n\t * @apiDescription 登录认证\n\t * @apiName signCheck\n\t * @apiGroup common\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /common/sign/check\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tsignCheck(req, res, next) {\n\t\treturn res.tools.setJson(0, '调用成功')\n\t}\n\n\t/**\n\t * @api {get} /common/captcha/:width/:height 验证码\n\t * @apiDescription 验证码\n\t * @apiName captcha\n\t * @apiGroup common\n\t *\n\t * @apiParam {String} width 宽度\n\t * @apiParam {String} height 高度\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /common/captcha/:width/:height\n\t */\n\tcaptcha(req, res, next) {\n\t\tconst width   = parseInt(req.params.width) || 80\n\t\tconst height  = parseInt(req.params.height) || 30\n\t\tconst code    = req.session.code = parseInt(Math.random() * 9000 + 1000)\n\t\tconst captcha = new captchapng(width, height, code)\n\n        captcha.color(0, 0, 0, 0)\n        captcha.color(80, 80, 80, 255)\n\n        const img = captcha.getBase64()\n        const imgbase64 = new Buffer(img, 'base64')\n\n\t\tres.end(imgbase64)\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/common.js","module.exports = require(\"cheerio\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cheerio\"\n// module id = 38\n// module chunks = 0","module.exports = require(\"captchapng\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"captchapng\"\n// module id = 39\n// module chunks = 0","import FeatureBase from './FeatureBase'\n\nclass RestBase extends FeatureBase{\n\tconstructor(model) {\n\t\tsuper(model)\n\t}\n\n\t/**\n\t * 获取资源列表\n\t * @param  {Object} query   \n\t * @param  {Object} fields  \n\t * @param  {Object} options \n\t * @return {Function}         \n\t */\n\tgetAll(query = {}, fields = {}, options = {}) {\n\t\tconst page  = Number(options.page) || 1\n\t\tconst limit = Number(options.limit) || 10\n\t\tconst skip  = (page - 1) * limit\n\t\tconst sort  = options.sort || {create_at: -1}\n\n\t\treturn this.model.findAsync(query, fields, {\n\t\t\tskip : skip, \n\t\t\tlimit: limit, \n\t\t\tsort : sort, \n\t\t})\n\t}\n\n\t/**\n\t * 获取某个指定资源的信息\n\t * @param  {Object} query  \n\t * @param  {Object} fields \n\t * @return {Function}        \n\t */\n\tget(query = {}, fields = {}) {\n\t\treturn this.model.findOneAsync(query, fields)\n\t}\n\n\t/**\n\t * 新建一个资源\n\t * @param  {Object} body \n\t * @return {Function}      \n\t */\n\tpost(body = {}) {\n\t\treturn new this.model(body).save()\n\t}\n\n\t/**\n\t * 更新某个指定资源的信息\n\t * @param  {Object} query   \n\t * @param  {Object} body    \n\t * @param  {Object} options \n\t * @return {Function}         \n\t */\n\tput(query = {}, body = {}, options = {}) {\n\t\tbody.update_at = Date.now()\n\t\toptions.upsert = !0\n\t\toptions.new = !0\n\t\treturn this.model.findOneAndUpdate(query, body, options)\n\t}\n\n\t/**\n\t * 删除某个指定资源\n\t * @param  {Object} query   \n\t * @param  {Object} options \n\t * @return {Function}         \n\t */\n\tdelete(query = {}, options = {}) {\n\t\treturn this.model.findOneAndRemove(query, options)\n\t}\n}\n\nexport default RestBase\n\n\n// WEBPACK FOOTER //\n// ./proxy/RestBase.js","import bluebird from 'bluebird'\n\nclass FeatureBase{\n\tconstructor(model) {\n\t\tObject.assign(this, {\n\t\t\tmodel, \n\t\t})\n\n\t\tthis.suffix = 'Async'\n\n\t\tthis.instanceSource = {\n\t\t\tQuery: [\n\t\t\t\t'count', 'distinct', 'exec', 'find', 'findOne', 'findOneAndRemove',\n\t\t\t\t'findOneAndUpdate', 'remove', 'update'\n\t\t\t],\n\t\t\tModel: [\n\t\t\t\t'remove', 'save',\n\t\t\t\t// extended from Document\n\t\t\t\t'update', 'validate', 'populate'\n\t\t\t]\n\t\t}\n\n\t\tthis.modelStaticsList = [\n\t\t\t// 'aggregate',\n\t\t\t'count', 'create', 'distinct', 'ensureIndexes',\n\t\t\t'find', 'findById', 'findByIdAndRemove', 'findByIdAndUpdate',\n\t\t\t'findOne', 'findOneAndRemove', 'findOneAndUpdate',\n\t\t\t'geoNear', 'geoSearch', 'mapReduce', 'populate', 'remove', 'update'\n\t\t]\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * init\n\t */\n\tinit() {\n\t\tconst self = this\n\t\tfor(let key in self.instanceSource) {\t\n\t\t\tself.instanceSource[key].forEach(function(value) {\n\t\t\t\tself[value + self.suffix] = function() {\n\t\t\t\t\treturn self.getPromise(bluebird, self.getResolver(self.model[value], [...Array.from(arguments)], self.model))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tself.modelStaticsList.forEach(function(value) {\n\t\t\tself[value + self.suffix] = function() {\n\t\t\t\treturn self.getPromise(bluebird, self.getResolver(self.model[value], [...Array.from(arguments)], self.model))\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * getPromise\n\t * @param  {Object} Promise  \n\t * @param  {Function} resolver \n\t * @return {Function}          \n\t */\n\tgetPromise(Promise, resolver) {\n\t\t//bluebird\n\t\tif(Promise.promisifyAll) return new Promise(resolver)\n\t\t// when\n\t\tif(Promise.lift) return Promise.promise(resolver)\n\t\t//RSVP / Q / es6-promise\n\t\tif(Promise.Promise) return new Promise.Promise(resolver)\n\n\t\tthrow new Error('Promise library is not supported')\n\t}\n\n\t/**\n\t * getResolver\n\t * @param  {Function} method  \n\t * @param  {Object} args    \n\t * @param  {Object} context \n\t * @return {Function}         \n\t */\n\tgetResolver(method, args, context) {\n\t\treturn function(resolve, reject) {\n\t\t\targs.push(function(err) {\n\t\t\t\tif (err) return reject(err)\n\t\t\t\tlet receivedArgs = [...Array.from(arguments)]\n\t\t\t\t// remove the first argument for error\n\t\t\t\treceivedArgs.shift()\n\t\t\t\tresolve(receivedArgs.length > 1 ? receivedArgs : receivedArgs[0])\n\t\t\t})\n\t\t\tmethod.apply(context, args)\n\t\t}\n\t}\n\n\t/**\n\t * 关联查询资源列表\n\t * @param  {Object} params  \n\t * @param  {Object} options \n\t * @return {Function}         \n\t */\n\tfindAndPopulateAsync(params = {}, options = {}) {\n\t\tparams.options = params.options || {}\n\t\tconst page  = Number(params.options.page) || 1\n\t\tconst limit = Number(params.options.limit) || 10\n\t\tconst skip  = (page - 1) * limit\n\t\tconst sort  = params.options.sort || {create_at: -1}\n\n\t\treturn this.model\n\t\t.find(params.query, params.fields, {\n\t\t\tskip : skip, \n\t\t\tlimit: limit, \n\t\t\tsort : sort,\n\t\t})\n\t\t.populate(options)\n\t\t.exec()\n\t}\n\n\t/**\n\t * 关联查询某个指定资源\n\t * @param  {Object} params  \n\t * @param  {Object} options \n\t * @return {Function}         \n\t */\n\tfindOneAndPopulateAsync(params = {}, options = {}) {\n\t\treturn this.model\n\t\t.findOne(params.query, params.fields)\n\t\t.populate(options)\n\t\t.exec()\n\t}\n}\n\nexport default FeatureBase\n\n\n// WEBPACK FOOTER //\n// ./proxy/FeatureBase.js","import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema({\n\ttitle    : String,\n\tremark   : String,\n\tsort     : Number,\n\tis_show  : Boolean,\n\timages   : Array,\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nexport default mongoose.model('banner', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/banner.js","import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema({\n\tname     : String,\n\tremark   : String,\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nexport default mongoose.model('classify', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/classify.js","import mongoose from 'mongoose'\n\nconst ObjectId = mongoose.Schema.Types.ObjectId\n\nconst Schema = mongoose.Schema({\n\ttypes   : [{\n\t\ttype: ObjectId, \n\t\tref : 'classify',\n\t}],\n\tname     : String,\n\tprice    : Number,\n\tremark   : String,\n\timages   : Array,\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nexport default mongoose.model('goods', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/goods.js","import mongoose from 'mongoose'\n\nconst ObjectId = mongoose.Schema.Types.ObjectId\n\nconst Schema = mongoose.Schema({\n\tgoods: {\n\t\ttype: ObjectId, \n\t\tref : 'goods',\n\t},\n\ttotal: {\n\t\ttype   : Number,\n\t\tdefault: 1,\n\t},\n\tamount: Number,\n\ttotalAmount: Number,\n\tuser    : {\n\t\ttype: ObjectId, \n\t\tref : 'user',\n\t},\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nexport default mongoose.model('cart', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/cart.js","import mongoose from 'mongoose'\n\nconst ObjectId = mongoose.Schema.Types.ObjectId\n\nconst Schema = mongoose.Schema({\n\tname     : String,\n\tgender   : String,\n\ttel      : String,\n\taddress  : String,\n\tis_def\t : {\n\t\ttype   : Boolean,\n\t\tdefault: false,\n\t},\n\tuser     : {\n\t\ttype: ObjectId, \n\t\tref : 'user',\n\t},\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nexport default mongoose.model('address', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/address.js","import mongoose from 'mongoose'\n\nconst ObjectId = mongoose.Schema.Types.ObjectId\n\nconst Schema = mongoose.Schema({\n\ttotalAmount: Number,\n\tpayAmount: Number,\n\tpayTime  : Date,\n\tstatus   : {\n\t\ttype   : String,\n\t\tdefault: 'submitted',\n\t},\n\trecipientName: String,\n\trecipientGender: String,\n\trecipientTel: String,\n\trecipientAddress: String,\n\titems    : Array,\n\tuser     : {\n\t\ttype: ObjectId, \n\t\tref : 'user',\n\t},\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nexport default mongoose.model('order', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/order.js","import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema({\n\ttitle    : String,\n\tcontent  : String,\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n\tupdate_at: Date,\n})\n\nexport default mongoose.model('help', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/help.js","import Model from '../models/user'\n\nclass Common{\n\tconstructor(model) {\n\t\tObject.assign(this, {\n\t\t\tmodel, \n\t\t})\n\t}\n\n\t/**\n\t * 新建一个用户\n\t * @param  {Object} body \n\t * @return {Function}          \n\t */\n\tnewAndSave(body) {\n\t\treturn new this.model(body).save()\n\t}\n\n\t/**\n\t * 根据用户名查询一个用户\n\t * @param  {String}   username \n\t * @return {Function}            \n\t */\n\tfindByName(username) {\n\t\treturn this.model.findOneAsync({\n\t\t\tusername: username\n\t\t})\n\t}\n}\n\nexport default new Common(Model)\n\n\n// WEBPACK FOOTER //\n// ./proxy/user.js","import Model from '../models/upload'\n\nclass Common{\n\tconstructor(model) {\n\t\tObject.assign(this, {\n\t\t\tmodel, \n\t\t})\n\t}\n\t\n\t/**\n\t * 上传文件\n\t * @param  {String}   name     \n\t * @param  {String}   path     \n\t * @return {Function}            \n\t */\n\tnewAndSave(name, path) {\n\t\treturn new this.model({\n\t\t\tname: name,\n\t\t\tpath: path,\n\t\t}).save()\n\t}\n\n\t/**\n\t * 根据ID查询文件\n\t * @param  {String}   id       \n\t * @return {Function}            \n\t */\n\tfindById(id) {\n\t\treturn this.model.findByIdAsync(id)\n\t}\n}\n\nexport default new Common(Model)\n\n\n// WEBPACK FOOTER //\n// ./proxy/upload.js","import mongoose from 'mongoose'\n\nconst Schema = mongoose.Schema({\n\tname     : String,\n\tpath     : String,\n\tcreate_at: {\n\t\ttype   : Date,\n\t\tdefault: Date.now(),\n\t},\n})\n\nexport default mongoose.model('upload', Schema)\n\n\n// WEBPACK FOOTER //\n// ./models/upload.js","import formidable from 'formidable'\nimport qn from 'qn'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.initClient()\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.post('/api/qiniu/upload', this.upload.bind(this))\n\t\tthis.app.post('/api/qiniu/download', this.download.bind(this))\n\t\tthis.app.post('/api/qiniu/saveAsURL', this.saveAsURL.bind(this))\n\t\tthis.app.post('/api/qiniu/stat', this.stat.bind(this))\n\t\tthis.app.post('/api/qiniu/move', this.move.bind(this))\n\t\tthis.app.post('/api/qiniu/copy', this.copy.bind(this))\n\t\tthis.app.post('/api/qiniu/delete', this.delete.bind(this))\n\t\tthis.app.post('/api/qiniu/list', this.list.bind(this))\n\t\tthis.app.post('/api/qiniu/image/info', this.imageInfo.bind(this))\n\t\tthis.app.post('/api/qiniu/image/exif', this.imageExif.bind(this))\n\t\tthis.app.post('/api/qiniu/image/view', this.imageView.bind(this))\n\t\tthis.app.post('/api/qiniu/image/mogr', this.imageMogr.bind(this))\n\t\tthis.app.post('/api/qiniu/image/watermark', this.watermark.bind(this))\n\t\tthis.app.post('/api/qiniu/md2html', this.md2html.bind(this))\n\t\tthis.app.post('/api/qiniu/qrcode', this.qrcode.bind(this))\n\t}\n\n\t/**\n\t * init qn\n\t */\n\tinitClient() {\n\t\tthis.client = qn.create({\n\t\t\taccessKey: 'AIoInqqk9hMIdzCVpUuUmAS8PhFgrO6MXsse4PFD',\n\t\t\tsecretKey: 'wh3JtbPWa2kCW22wRd17DJ6v1hPhSRB5fSWPw6UN',\n\t\t\tbucket   : 'skyvow',\n\t\t\torigin   : 'http://7xo4dc.com1.z0.glb.clouddn.com/',\n\t\t})\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {post} /qiniu/upload 上传文件\n\t * @apiDescription 上传文件\n\t * @apiName upload\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {File} file 文件\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/upload\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"上传成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\tupload(req, res, next) {\n\t\tconst form = new formidable.IncomingForm()\n\t\tform.parse(req, (err, fields, files) => {\n\t\t\tfor (let item in files) {\n\t\t\t\tconst file         = files[item] \n\t\t\t\tconst tempfilepath = file.path \n\t\t\t\tconst filenewname  = res.tools.randFilename(file) \n\t\t\t\t\n\t\t\t\tthis.client.uploadFile(tempfilepath, {key: filenewname}, (err, doc) => {\n\t\t\t\t\tif (err) return next(err)\n\t\t\t\t\treturn res.tools.setJson(0, '上传成功', {\n\t\t\t\t\t\tkey: doc.key, \n\t\t\t\t\t\tpath: doc.url, \n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/download 下载文件\n\t * @apiDescription 下载文件\n\t * @apiName download\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/download\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\tdownload(req, res, next) {\n\t\tthis.client.stat(req.body.key, (err, content, doc) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '调用成功', {\n\t\t\t\tcontent: content, \n\t\t\t\tdoc: doc, \n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/saveAsURL 保存文件\n\t * @apiDescription 保存文件\n\t * @apiName saveAsURL\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {String} [name] 重命名\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/saveAsURL\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": \"data\"\n\t *     }\n\t */\n\tsaveAsURL(req, res, next) {\n\t\tconst key  = req.body.key\n\t\tconst name = req.body.name\n\t\tconst doc  = this.client.saveAsURL(key, name)\n\n\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t}\n\n\t/**\n\t * @api {post} /qiniu/stat 文件信息\n\t * @apiDescription 文件信息\n\t * @apiName stat\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/stat\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"fsize\": \"fsize\",\n\t *       \t\"hash\": \"hash\",\n\t *       \t\"mimeType\": \"mimeType\",\n\t *       \t\"putTime\": \"putTime\",\n\t *       }\n\t *     }\n\t */\n\tstat(req, res, next) {\n\t\tthis.client.stat(req.body.key, (err, doc) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/move 移动文件\n\t * @apiDescription 移动文件\n\t * @apiName move\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {String} [name] 重命名\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/move\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tmove(req, res, next) {\n\t\tconst k1   = req.body.key\n\t\tconst name = req.body.name\n\t\tconst k2   = name ? name : res.tools.randFilename({name: k1})\n\n\t\tthis.client.move(k1, k2, (err, doc) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '调用成功')\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/copy 复制文件\n\t * @apiDescription 复制文件\n\t * @apiName copy\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {String} [name] 重命名\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/copy\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tcopy(req, res, next) {\n\t\tconst k1   = req.body.key\n\t\tconst name = req.body.name\n\t\tconst k2   = name ? name : res.tools.randFilename({name: k1})\n\n\t\tthis.client.copy(k1, k2, (err, doc) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '调用成功')\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/delete 删除文件\n\t * @apiDescription 删除文件\n\t * @apiName delete\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/delete\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tthis.client.delete(req.body.key, (err, doc) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/list 列出所有文件\n\t * @apiDescription 列出所有文件\n\t * @apiName list\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {Object} [opt] 配置参数\n\t *  - {String} prefix 指定要过滤出来的前缀，默认 '/'\n\t *  - {String} marker 为服务器上次导出时返回的标记，没有可以不填\n\t *  - {String} limit 单次查询返回的最大条目数，最大不超过1000\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/list\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"marker\": \"marker\",\n\t *       \t\"items\": [{\n\t *       \t\t\"key\": \"key\",\n\t *       \t\t\"hash\": \"hash\",\n\t *       \t\t\"fsize\": \"fsize\",\n\t *       \t\t\"mimeType\": \"mimeType\",\n\t *       \t\t\"putTime\": \"putTime\",\n\t *       \t}]\n\t *       }\n\t *     }\n\t */\n\tlist(req, res, next) {\n\t\tconst opt = req.body.opt || {}\n\t\tthis.client.list(opt, (err, docs) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '调用成功', docs)\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/image/info 图片基本信息\n\t * @apiDescription 图片基本信息\n\t * @apiName imageInfo\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/image/info\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"format\": \"format\",\n\t *       \t\"width\": \"width\",\n\t *       \t\"height\": \"height\",\n\t *       \t\"colorModel\": \"colorModel\",\n\t *       \t\"orientation\": \"orientation\",\n\t *       }\n\t *     }\n\t */\n\timageInfo(req, res, next) {\n\t\tthis.client.imageInfo(req.body.key, (err, doc) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/image/exif 图片EXIF信息\n\t * @apiDescription 图片EXIF信息\n\t * @apiName imageExif\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/image/exif\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\timageExif(req, res, next) {\n\t\tthis.client.exif(req.body.key, (err, doc) => {\n\t\t\tif (err) return next(err)\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /qiniu/image/view 生成缩略图\n\t * @apiDescription 生成缩略图\n\t * @apiName imageView\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {Object} opt 配置参数\n\t *  - {Number} mode \n\t *  \t- mode=1  表示限定目标缩略图的宽度和高度，放大并从缩略图中央处裁剪为指定 Width x Height 大小的图片\n\t *  \t- mode=2  指定 Width 和 Height，表示限定目标缩略图的长和宽，将缩略图的大小限定在指定的宽高矩形内\n\t *  \t- mode=2  指定 Width 但不指定 Height，表示限定目标缩略图的宽度，高度等比缩略自适应\n\t *  \t- mode=2  指定 Height 但不指定 Width，表示限定目标缩略图的高度，宽度等比缩略自适应\n\t *  - {Number} width 宽度\n\t *  - {Number} height 高度\n\t *  - {Number} [q] 质量\n\t *  - {String} [format] 指定目标缩略图的输出格式，取值范围：jpg, gif, png, webp 等图片格式\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/image/view\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\timageView(req, res, next) {\n\t\tconst key = req.body.key\n\t\tconst opt = req.body.opt || {}\n\t\tconst doc = this.client.imageView(key, opt)\n\n\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t}\n\n\t/**\n\t * @api {post} /qiniu/image/mogr 高级图片处理（缩略、裁剪、旋转、转化）\n\t * @apiDescription 高级图片处理（缩略、裁剪、旋转、转化）\n\t * @apiName imageMogr\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {Object} opt 配置参数\n\t *  - {String} [thumbnail] 缩略图大小，详解见下\n\t *  - {String} [gravity] 位置偏移，只会使其后的裁剪偏移({offset})受到影响，默认值为 NorthWest（左上角）\n\t *      可选值：NorthWest, North, NorthEast, West, Center, East, SouthWest, South, SouthEast \n\t *  - {String} [crop] 裁剪大小和偏移，详解见下\n\t *  - {Number} [quality] 图片质量，取值范围是[1, 100]\n\t *  - {Number} [rotate] 旋转角度\n\t *  - {String} [format] 输出格式，可选为jpg, gif, png, bmp, tiff, webp等\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/image/mogr\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\timageMogr(req, res, next) {\n\t\tconst key = req.body.key\n\t\tconst opt = req.body.opt || {}\n\t\tconst doc = this.client.imageMogr(key, opt)\n\n\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t}\n\n\t/**\n\t * @api {post} /qiniu/image/watermark 图片水印（图片、文字）\n\t * @apiDescription 图片水印（图片、文字）\n\t * @apiName watermark\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {Object} opt 配置参数\n\t *  - {Number} mode \n\t *  \t- mode=1 时，表示图片水印：\n\t *  \t- mode=2 时，表示文字水印：\n\t *   - {String} image 水印图片，使用图片水印时需指定用于水印的远程图片URL。EncodedImageURL = urlsafe_base64_encode(ImageURL)\n\t *   - {String} text 水印文本，文字水印时必须。EncodedText = urlsafe_base64_encode(Text)\n\t *   - {String} [font] 字体名，若水印文本为非英文字符（比如中文）构成，则必须。EncodedFontName = urlsafe_base64_encode(FontName)\n\t *   - {Number} [fontsize] 字体大小，0 表示默认，单位: 缇，等于 1⁄20 磅\n\t *   - {String} [fill] 字体颜色。EncodedTextColor = urlsafe_base64_encode(TextColor)\n\t *       RGB格式，可以是颜色名称（比如 red）或十六进制（比如 #FF0000），\n\t *       参考 [RGB颜色编码表](http://www.rapidtables.com/web/color/RGB_Color.htm)\n\t *  - {Number} [dissolve] 透明度，取值范围 1-100，默认值 100，即表示 100%（不透明）\n\t *  - {String} [gravity] 位置，默认值为 SouthEast（右下角）\n\t *      可选值：NorthWest, North, NorthEast, West, Center, East, SouthWest, South, SouthEast\n\t *  - {Number} [dx] 横向边距，单位：像素（px），默认值为 10\n\t *  - {Number} [dy] 纵向边距，单位：像素（px），默认值为 10\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/image/watermark\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\twatermark(req, res, next) {\n\t\tconst key = req.body.key\n\t\tconst opt = req.body.opt || {}\n\t\tconst doc = this.client.watermark(key, opt)\n\n\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t}\n\n\t/**\n\t * @api {post} /qiniu/md2html Markdown转HTML\n\t * @apiDescription Markdown转HTML\n\t * @apiName md2html\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {Object} opt 配置参数\n\t *  - {Number} mode 0 表示转为完整的 HTML(head+body) 输出; 1 表示只转为HTML Body，缺省值：0\n\t *  - {String} css CSS 样式的URL\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/md2html\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\tmd2html(req, res, next) {\n\t\tconst key = req.body.key\n\t\tconst opt = req.body.opt || {}\n\t\tconst doc = this.client.md2html(key, opt)\n\n\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t}\n\n\t/**\n\t * @api {post} /qiniu/qrcode 生成二维码\n\t * @apiDescription 生成二维码\n\t * @apiName qrcode\n\t * @apiGroup qiniu\n\t *\n\t * @apiParam {String} key 文件名\n\t * @apiParam {Number} [mode=0] 可选值0或1，0表示以当前url生成二维码，1表示以当前URL中的数据生成二维码\n\t * @apiParam {String} [level=L] 冗余度，可选值 L、M、Q、H\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /qiniu/qrcode\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": \"data\"\n\t *     }\n\t */\n\tqrcode(req, res, next) {\n\t\tconst key   = req.body.key\n\t\tconst mode  = req.body.mode\n\t\tconst level = req.body.level\n\t\tconst doc   = this.client.qrcode(key, mode, level)\n\n\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/qiniu.js","module.exports = require(\"qn\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"qn\"\n// module id = 53\n// module chunks = 0","import proxy from '../proxy'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.banner, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.get('/api/banner', this.getAll.bind(this))\n\t\tthis.app.get('/api/banner/:id', this.get.bind(this))\n\t\tthis.app.post('/api/banner', this.post.bind(this))\n\t\tthis.app.put('/api/banner/:id', this.put.bind(this))\n\t\tthis.app.delete('/api/banner/:id', this.delete.bind(this))\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {get} /banner 列出所有资源\n\t * @apiDescription 列出所有资源\n\t * @apiName getAll\n\t * @apiGroup banner\n\t * \n\t * @apiParam {String} [page=1] 指定第几页\n\t * @apiParam {String} [limit=10] 指定每页的记录数\n\t * @apiParam {Boolean} [is_show] 指定is_show过滤\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /banner\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }]\n\t *     }\n\t */\n\tgetAll(req, res, next) {\n\t\tconst query = {}\n\n\t\tconst fields = {}\n\n\t\tconst options = {\n\t\t\tpage : req.query.page, \n\t\t\tlimit: req.query.limit, \n\t\t}\n\n\t\tif (req.query.is_show) {\n\t\t\tquery.is_show = true\n\t\t}\n\n\t\tPromise.all([\n\t\t\tthis.model.countAsync(query), \n\t\t\tthis.model.getAll(query, fields, options), \n\t\t])\n\t\t.then(docs => {\n\t\t\tres.tools.setJson(0, '调用成功', {\n\t\t\t\titems   : docs[1], \n\t\t\t\tpaginate: new res.paginate(Number(options.page), Number(options.limit), docs[0]).item, \n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /banner/:id 获取某个指定资源的信息\n\t * @apiDescription 获取某个指定资源的信息\n\t * @apiName get\n\t * @apiGroup banner\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /banner/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tget(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\n\t\tconst fields = {}\n\n\t\tthis.model.get(query, fields)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /banner 新建一个资源\n\t * @apiDescription 新建一个资源\n\t * @apiName post\n\t * @apiGroup banner\n\t *\n\t * @apiParam {String} title 标题\n\t * @apiParam {String} remark 描述\n\t * @apiParam {Number} sort 排序\n\t * @apiParam {Boolean} is_show 是否显示\n\t * @apiParam {Array} images 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /banner\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"新增成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\"\n\t *       }\n\t *     }\n\t */\n\tpost(req, res, next) {\n\t\tconst body = {\n\t\t\ttitle    : req.body.title,\n\t\t\tremark   : req.body.remark,\n\t\t\tsort     : req.body.sort || 99,\n\t\t\tis_show  : req.body.is_show,\n\t\t\timages   : req.body.images,\n\t\t}\n\n\t\tthis.model.post(body)\n\t\t.then(doc => res.tools.setJson(0, '新增成功', {_id: doc._id}))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {put} /banner/:id 更新某个指定资源的信息\n\t * @apiDescription 更新某个指定资源的信息\n\t * @apiName put\n\t * @apiGroup banner\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiParam {String} [title] 标题\n\t * @apiParam {String} [remark] 描述\n\t * @apiParam {Number} [sort] 排序\n\t * @apiParam {Boolean} [is_show] 是否显示\n\t * @apiParam {Array} [images] 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /banner/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tput(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\n\t\tconst body = {\n\t\t\ttitle    : req.body.title,\n\t\t\tremark   : req.body.remark,\n\t\t\tsort     : req.body.sort || 99,\n\t\t\tis_show  : req.body.is_show,\n\t\t\timages   : req.body.images,\n\t\t}\n\n\t\tthis.model.put(query, body)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '更新成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {delete} /banner/:id 删除某个指定资源\n\t * @apiDescription 删除某个指定资源\n\t * @apiName delete\n\t * @apiGroup banner\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiSampleRequest /banner/:id\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\t\t\n\t\tthis.model.delete(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/banner.js","import proxy from '../proxy'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.classify, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.get('/api/classify', this.getAll.bind(this))\n\t\tthis.app.get('/api/classify/:id', this.get.bind(this))\n\t\tthis.app.post('/api/classify', this.post.bind(this))\n\t\tthis.app.put('/api/classify/:id', this.put.bind(this))\n\t\tthis.app.delete('/api/classify/:id', this.delete.bind(this))\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {get} /classify 列出所有资源\n\t * @apiDescription 列出所有资源\n\t * @apiName getAll\n\t * @apiGroup classify\n\t * \n\t * @apiParam {String} [page=1] 指定第几页\n\t * @apiParam {String} [limit=10] 指定每页的记录数\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /classify\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"name\": \"name\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }]\n\t *     }\n\t */\t\n\tgetAll(req, res, next) {\n\t\tconst query = {}\n\n\t\tconst fields = {}\n\n\t\tconst options = {\n\t\t\tpage : req.query.page, \n\t\t\tlimit: req.query.limit, \n\t\t}\n\n\t\tPromise.all([\n\t\t\tthis.model.countAsync(query), \n\t\t\tthis.model.getAll(query, fields, options), \n\t\t])\n\t\t.then(docs => {\n\t\t\tres.tools.setJson(0, '调用成功', {\n\t\t\t\titems   : docs[1], \n\t\t\t\tpaginate: new res.paginate(Number(options.page), Number(options.limit), docs[0]).item, \n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /classify/:id 获取某个指定资源的信息\n\t * @apiDescription 获取某个指定资源的信息\n\t * @apiName get\n\t * @apiGroup classify\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /classify/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"name\": \"name\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tget(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\n\t\tconst fields = {}\n\n\t\tthis.model.get(query, fields)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /classify 新建一个资源\n\t * @apiDescription 新建一个资源\n\t * @apiName post\n\t * @apiGroup classify\n\t *\n\t * @apiParam {String} name 标题\n\t * @apiParam {String} remark 内容\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /classify\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"新增成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\"\n\t *       }\n\t *     }\n\t */\n\tpost(req, res, next) {\n\t\tconst body = {\n\t\t\tname  : req.body.name, \n\t\t\tremark: req.body.remark, \n\t\t}\n\n\t\tthis.model.post(body)\n\t\t.then(doc => res.tools.setJson(0, '新增成功', {_id: doc._id}))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {put} /classify/:id 更新某个指定资源的信息\n\t * @apiDescription 更新某个指定资源的信息\n\t * @apiName put\n\t * @apiGroup classify\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiParam {String} [name] 标题\n\t * @apiParam {String} [remark] 内容\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /classify/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"name\": \"name\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tput(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\n\t\tconst body = {\n\t\t\tname  : req.body.name, \n\t\t\tremark: req.body.remark, \n\t\t}\n\n\t\tthis.model.put(query, body)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '更新成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {delete} /classify/:id 删除某个指定资源\n\t * @apiDescription 删除某个指定资源\n\t * @apiName delete\n\t * @apiGroup classify\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiSampleRequest /classify/:id\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\t\t\n\t\tthis.model.delete(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/classify.js","import proxy from '../proxy'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.goods, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.get('/api/goods', this.getAll.bind(this))\n\t\tthis.app.get('/api/goods/:id', this.get.bind(this))\n\t\tthis.app.post('/api/goods', this.post.bind(this))\n\t\tthis.app.put('/api/goods/:id', this.put.bind(this))\n\t\tthis.app.delete('/api/goods/:id', this.delete.bind(this))\n\t\tthis.app.get('/api/goods/search/all', this.search.bind(this))\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {get} /goods 列出所有资源\n\t * @apiDescription 列出所有资源\n\t * @apiName getAll\n\t * @apiGroup goods\n\t * \n\t * @apiParam {String} [page=1] 指定第几页\n\t * @apiParam {String} [limit=10] 指定每页的记录数\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /goods\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"name\": \"name\",\n\t *       \t\"price\": \"price\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"images\": \"images\",\n\t *       \t\"types\": \"types\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }]\n\t *     }\n\t */\t\n\tgetAll(req, res, next) {\n\t\tconst query = {}\n\n\t\tconst opts = {\n\t\t\tpage : req.query.page, \n\t\t\tlimit: req.query.limit\n\t\t}\n\n\t\tif (req.query.type) {\n\t\t\tquery.types = req.query.type\n\t\t}\n\n\t\tif (req.query.keyword) {\n\t\t\tquery.name = req.query.keyword\n\t\t}\n\n\t\tconst params = {\n\t\t\tquery  : query, \n\t\t\tfields : {}, \n\t\t\toptions: opts, \n\t\t}\n\n\t\tconst options = {\n\t\t\tpath    : 'types', \n\t\t\tselect  : {}, \n\t\t}\n\n\t\tPromise.all([\n\t\t\tthis.model.countAsync(query), \n\t\t\tthis.model.findAndPopulateAsync(params, options), \n\t\t])\n\t\t.then(docs => {\n\t\t\tres.tools.setJson(0, '调用成功', {\n\t\t\t\titems   : docs[1], \n\t\t\t\tpaginate: new res.paginate(Number(opts.page), Number(opts.limit), docs[0]).item, \n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /goods/:id 获取某个指定资源的信息\n\t * @apiDescription 获取某个指定资源的信息\n\t * @apiName get\n\t * @apiGroup goods\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /goods/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"name\": \"name\",\n\t *       \t\"price\": \"price\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"images\": \"images\",\n\t *       \t\"types\": \"types\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tget(req, res, next) {\n\t\tconst params = {\n\t\t\tquery  : {\n\t\t\t\t_id: req.params.id\n\t\t\t},\n\t\t\tfields : {}, \n\t\t\toptions: {}, \n\t\t}\n\n\t\tconst options = {\n\t\t\tpath    : 'types', \n\t\t\tselect  : {}, \n\t\t}\n\n\t\tthis.model.findOneAndPopulateAsync(params, options)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /goods 新建一个资源\n\t * @apiDescription 新建一个资源\n\t * @apiName post\n\t * @apiGroup goods\n\t *\n\t * @apiParam {String} name 名称\n\t * @apiParam {Number} price 价格\n\t * @apiParam {String} remark 简介\n\t * @apiParam {Array} images 图片\n\t * @apiParam {Array} types 分类\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /goods\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"新增成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\"\n\t *       }\n\t *     }\n\t */\n\tpost(req, res, next) {\n\t\tconst body = {\n\t\t\tname  : req.body.name, \n\t\t\tprice : req.body.price, \n\t\t\tremark: req.body.remark, \n\t\t\timages: req.body.images, \n\t\t\ttypes : req.body.types, \n\t\t}\n\n\t\tthis.model.post(body)\n\t\t.then(doc => res.tools.setJson(0, '新增成功', {_id: doc._id}))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {put} /goods/:id 更新某个指定资源的信息\n\t * @apiDescription 更新某个指定资源的信息\n\t * @apiName put\n\t * @apiGroup goods\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiParam {String} [name] 名称\n\t * @apiParam {String} [price] 价格\n\t * @apiParam {String} [remark] 简介\n\t * @apiParam {Array} [images] 图片\n\t * @apiParam {Array} [types] 分类\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /goods/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"name\": \"name\",\n\t *       \t\"price\": \"price\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"images\": \"images\",\n\t *       \t\"types\": \"types\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tput(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\n\t\tconst body = {\n\t\t\tname  : req.body.name, \n\t\t\tprice : req.body.price, \n\t\t\tremark: req.body.remark, \n\t\t\timages: req.body.images, \n\t\t\ttypes : req.body.types, \n\t\t}\n\n\t\tthis.model.put(query, body)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '更新成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {delete} /goods/:id 删除某个指定资源\n\t * @apiDescription 删除某个指定资源\n\t * @apiName delete\n\t * @apiGroup goods\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiSampleRequest /goods/:id\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\t\t\n\t\tthis.model.delete(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {search} /goods/search/all 按关键词查询资源\n\t * @apiDescription 按关键词查询资源\n\t * @apiName search\n\t * @apiGroup goods\n\t *\n\t * @apiParam {String} keyword 关键词\n\t * @apiSampleRequest /goods/search/all\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"num\": \"num\",\n\t *       }]\n\t *     }\n\t */\n\tsearch(req, res, next) {\n\t\tconst keyword = req.query.keyword\n\t\tconst pattern = keyword && new RegExp(keyword)\n\n\t\tthis.model.model.aggregate([\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\tname: pattern\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t$group: {\n\t\t\t\t\t_id: '$name',\n\t\t\t\t\tnum: {\n\t\t\t\t\t\t$sum: 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t])\n\t\t.then(doc => res.tools.setJson(0, '调用成功', doc))\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/goods.js","import proxy from '../proxy'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.cart, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.get('/api/cart', this.getAll.bind(this))\n\t\tthis.app.get('/api/cart/:id', this.get.bind(this))\n\t\tthis.app.post('/api/cart', this.post.bind(this))\n\t\tthis.app.put('/api/cart/:id', this.put.bind(this))\n\t\tthis.app.delete('/api/cart/:id', this.delete.bind(this))\n\t\tthis.app.post('/api/cart/clear', this.clear.bind(this))\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {get} /cart 列出所有资源\n\t * @apiDescription 列出所有资源\n\t * @apiName getAll\n\t * @apiGroup cart\n\t * \n\t * @apiParam {String} [page=1] 指定第几页\n\t * @apiParam {String} [limit=10] 指定每页的记录数\n\t * @apiParam {Boolean} [is_show] 指定is_show过滤\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /cart\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }]\n\t *     }\n\t */\n\tgetAll(req, res, next) {\n\t\tconst query = {\n\t\t\tuser: req.user._id\n\t\t}\n\n\t\tconst params = {\n\t\t\tquery  : query, \n\t\t\tfields : {}, \n\t\t\toptions: {}, \n\t\t}\n\n\t\tconst options = {\n\t\t\tpath    : 'goods', \n\t\t\tselect  : {}, \n\t\t}\n\n\t\tthis.model.findAndPopulateAsync(params, options)\n\t\t.then(docs => res.tools.setJson(0, '调用成功', docs))\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /cart/:id 获取某个指定资源的信息\n\t * @apiDescription 获取某个指定资源的信息\n\t * @apiName get\n\t * @apiGroup cart\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /cart/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tget(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\n\t\tconst params = {\n\t\t\tquery  : query, \n\t\t\tfields : {}, \n\t\t\toptions: {}, \n\t\t}\n\n\t\tconst options = {\n\t\t\tpath    : 'goods', \n\t\t\tselect  : {}, \n\t\t}\n\n\t\tthis.model.findOneAndPopulateAsync(params, options)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /cart 新建一个资源\n\t * @apiDescription 新建一个资源\n\t * @apiName post\n\t * @apiGroup cart\n\t *\n\t * @apiParam {String} title 标题\n\t * @apiParam {String} remark 描述\n\t * @apiParam {Number} sort 排序\n\t * @apiParam {Boolean} is_show 是否显示\n\t * @apiParam {Array} images 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /cart\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"新增成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\"\n\t *       }\n\t *     }\n\t */\n\tpost(req, res, next) {\n\t\tconst query = {\n\t\t\tgoods : req.body.goods, \n\t\t\tuser : req.user._id, \n\t\t}\n\n\t\tconst body = {\n\t\t\tgoods : req.body.goods, \n\t\t\ttotal: Number(req.body.total) || 1, \n\t\t\tuser : req.user._id, \n\t\t}\n\n\t\tconst p1 = proxy.goods.findByIdAsync(query.goods)\n\t\tconst p2 = this.model.findOneAsync(query)\n\n\t\tPromise.all([p1, p2])\n\t\t.then(doc => {\n\t\t\tconst goods = doc[0]\n\t\t\tconst cart  = doc[1]\n\n\t\t\tif (!goods) return res.tools.setJson(1, '资源不存在或已删除')\n\n\t\t\tif (!cart) {\n\t\t\t\tbody.amount = goods.price\n\t\t\t\tbody.totalAmount = goods.price * body.total\n\t\t\t\treturn this.model.post(body)\n\t\t\t}\n\n\t\t\tcart.total = cart.total + body.total\n\t\t\tcart.amount = goods.price\n\t\t\tcart.totalAmount = goods.price * cart.total\n\t\t\treturn cart.save()\n\t\t})\n\t\t.then(doc => res.tools.setJson(0, '新增成功', {_id: doc._id}))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {put} /cart/:id 更新某个指定资源的信息\n\t * @apiDescription 更新某个指定资源的信息\n\t * @apiName put\n\t * @apiGroup cart\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiParam {String} [title] 标题\n\t * @apiParam {String} [remark] 描述\n\t * @apiParam {Number} [sort] 排序\n\t * @apiParam {Boolean} [is_show] 是否显示\n\t * @apiParam {Array} [images] 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /cart/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tput(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\n\t\tconst body = {\n\t\t\ttotal: req.body.total, \n\t\t}\n\n\t\tthis.model.findOneAsync(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\tdoc.total = Math.abs(body.total)\n\t\t\tdoc.totalAmount = Math.abs(doc.amount * doc.total)\n\t\t\treturn doc.save()\n\t\t})\n\t\t.then(doc => res.tools.setJson(0, '更新成功', doc))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {delete} /cart/:id 删除某个指定资源\n\t * @apiDescription 删除某个指定资源\n\t * @apiName delete\n\t * @apiGroup cart\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiSampleRequest /cart/:id\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\t\t\n\t\tthis.model.delete(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {clear} /cart/clear 清空某个指定资源\n\t * @apiDescription 清空某个指定资源\n\t * @apiName clear\n\t * @apiGroup cart\n\t *\n\t * @apiSampleRequest /cart/clear\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tclear(req, res, next) {\n\t\tconst query = {\n\t\t\tuser: req.user._id\n\t\t}\n\n\t\tthis.model.removeAsync(query)\n\t\t.then(doc => res.tools.setJson(0, '删除成功'))\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/cart.js","import proxy from '../proxy'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.address, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.post('/api/address/default/:id', this.setDefault.bind(this))\n\t\tthis.app.get('/api/address/default', this.getDefault.bind(this))\n\t\tthis.app.get('/api/address', this.getAll.bind(this))\n\t\tthis.app.get('/api/address/:id', this.get.bind(this))\n\t\tthis.app.post('/api/address', this.post.bind(this))\n\t\tthis.app.put('/api/address/:id', this.put.bind(this))\n\t\tthis.app.delete('/api/address/:id', this.delete.bind(this))\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {post} /address/default/:id 设置默认地址\n\t * @apiDescription 设置默认地址\n\t * @apiName setDefault\n\t * @apiGroup address\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /address/default/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\tsetDefault(req, res, next) {\n\t\tconst query = {\n\t\t\tis_def: true, \n\t\t\tuser  : req.user._id, \n\t\t}\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tis_def: false\n\t\t\t}\n\t\t}\n\n\t\tthis.model.findOneAndUpdateAsync(query, update)\n\t\t.then(doc => {\n\t\t\treturn this.model.findOneAndUpdateAsync({_id: req.params.id}, {$set: {is_def: true}})\n\t\t})\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /address/default 获取默认地址\n\t * @apiDescription 获取默认地址\n\t * @apiName getDefault\n\t * @apiGroup address\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /address/default\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\tgetDefault(req, res, next) {\n\t\tconst query = {\n\t\t\tis_def: true, \n\t\t\tuser  : req.user._id, \n\t\t}\n\n\t\tconst fields = {}\n\t\t\n\t\tthis.model.get(query, fields)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {get} /address 列出所有资源\n\t * @apiDescription 列出所有资源\n\t * @apiName getAll\n\t * @apiGroup address\n\t * \n\t * @apiParam {String} [page=1] 指定第几页\n\t * @apiParam {String} [limit=10] 指定每页的记录数\n\t * @apiParam {Boolean} [is_show] 指定is_show过滤\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /address\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }]\n\t *     }\n\t */\n\tgetAll(req, res, next) {\n\t\tconst query = {\n\t\t\tuser: req.user._id\n\t\t}\n\n\t\tconst fields = {}\n\n\t\tconst options = {\n\t\t\tpage : req.query.page, \n\t\t\tlimit: req.query.limit, \n\t\t}\n\n\t\tPromise.all([\n\t\t\tthis.model.countAsync(query), \n\t\t\tthis.model.getAll(query, fields, options), \n\t\t])\n\t\t.then(docs => {\n\t\t\tres.tools.setJson(0, '调用成功', {\n\t\t\t\titems   : docs[1], \n\t\t\t\tpaginate: new res.paginate(Number(options.page), Number(options.limit), docs[0]).item, \n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /address/:id 获取某个指定资源的信息\n\t * @apiDescription 获取某个指定资源的信息\n\t * @apiName get\n\t * @apiGroup address\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /address/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tget(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\n\t\tconst fields = {}\n\n\t\tthis.model.get(query, fields)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /address 新建一个资源\n\t * @apiDescription 新建一个资源\n\t * @apiName post\n\t * @apiGroup address\n\t *\n\t * @apiParam {String} title 标题\n\t * @apiParam {String} remark 描述\n\t * @apiParam {Number} sort 排序\n\t * @apiParam {Boolean} is_show 是否显示\n\t * @apiParam {Array} images 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /address\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"新增成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\"\n\t *       }\n\t *     }\n\t */\n\tpost(req, res, next) {\n\t\tconst query = {\n\t\t\tis_def: true, \n\t\t\tuser  : req.user._id, \n\t\t}\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tis_def: false\n\t\t\t}\n\t\t}\n\n\t\tconst body = {\n\t\t\tname   : req.body.name, \n\t\t\tgender : req.body.gender, \n\t\t\ttel    : req.body.tel, \n\t\t\taddress: req.body.address, \n\t\t\tis_def : req.body.is_def, \n\t\t\tuser   : req.user._id, \n\t\t}\n\n\t\tif (body.is_def) {\n\t\t\tthis.model.findOneAndUpdateAsync(query, update)\n\t\t\t.then(doc => this.model.post(body))\n\t\t\t.then(doc => res.tools.setJson(0, '新增成功', {_id: doc._id}))\n\t\t\t.catch(err => next(err))\n\t\t}\n\n\t\tif (!body.is_def) {\n\t\t\tthis.model.countAsync({user: req.user._id})\n\t\t\t.then(doc => {\n\t\t\t\tif (!doc) body.is_def = true\n\t\t\t\treturn this.model.post(body)\n\t\t\t})\n\t\t\t.then(doc => res.tools.setJson(0, '新增成功', {_id: doc._id}))\n\t\t\t.catch(err => next(err))\n\t\t}\n\t}\n\n\t/**\n\t * @api {put} /address/:id 更新某个指定资源的信息\n\t * @apiDescription 更新某个指定资源的信息\n\t * @apiName put\n\t * @apiGroup address\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiParam {String} [title] 标题\n\t * @apiParam {String} [remark] 描述\n\t * @apiParam {Number} [sort] 排序\n\t * @apiParam {Boolean} [is_show] 是否显示\n\t * @apiParam {Array} [images] 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /address/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tput(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\n\t\tconst body = {\n\t\t\tname   : req.body.name, \n\t\t\tgender : req.body.gender, \n\t\t\ttel    : req.body.tel, \n\t\t\taddress: req.body.address, \n\t\t\tis_def : req.body.is_def, \n\t\t}\n\n\t\tconst find = {\n\t\t\tis_def: true, \n\t\t\tuser  : req.user._id, \n\t\t}\n\n\t\tconst update = {\n\t\t\t$set: {\n\t\t\t\tis_def: false\n\t\t\t}\n\t\t}\n\n\t\tif (body.is_def) {\n\t\t\tthis.model.findOneAndUpdateAsync(find, update)\n\t\t\t.then(doc => this.model.put(query, body))\n\t\t\t.then(doc => {\n\t\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\t\treturn res.tools.setJson(0, '更新成功', doc)\n\t\t\t})\n\t\t\t.catch(err => next(err))\n\t\t}\n\n\t\tif (!body.is_def) {\n\t\t\tthis.model.put(query, body)\n\t\t\t.then(doc => {\n\t\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\t\treturn res.tools.setJson(0, '更新成功', doc)\n\t\t\t})\n\t\t\t.catch(err => next(err))\n\t\t}\n\t}\n\n\t/**\n\t * @api {delete} /address/:id 删除某个指定资源\n\t * @apiDescription 删除某个指定资源\n\t * @apiName delete\n\t * @apiGroup address\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiSampleRequest /address/:id\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\t\t\n\t\tthis.model.delete(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/address.js","import proxy from '../proxy'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.order, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.get('/api/order', this.getAll.bind(this))\n\t\tthis.app.get('/api/order/:id', this.get.bind(this))\n\t\tthis.app.post('/api/order', this.post.bind(this))\n\t\tthis.app.put('/api/order/:id', this.put.bind(this))\n\t\tthis.app.delete('/api/order/:id', this.delete.bind(this))\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {get} /order 列出所有资源\n\t * @apiDescription 列出所有资源\n\t * @apiName getAll\n\t * @apiGroup order\n\t * \n\t * @apiParam {String} [page=1] 指定第几页\n\t * @apiParam {String} [limit=10] 指定每页的记录数\n\t * @apiParam {Boolean} [is_show] 指定is_show过滤\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /order\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }]\n\t *     }\n\t */\n\tgetAll(req, res, next) {\n\t\tconst status = req.query.type\n\n\t\tconst query = {\n\t\t\tuser  : req.user._id,\n\t\t\tstatus: status,\n\t\t}\n\n\t\tstatus === 'all' && delete query.status\n\n\t\tconst opts = {\n\t\t\tpage : req.query.page, \n\t\t\tlimit: req.query.limit, \n\t\t}\n\n\t\tconst params = {\n\t\t\tquery  : query, \n\t\t\tfields : {}, \n\t\t\toptions: opts, \n\t\t}\n\n\t\tconst options = {\n\t\t\tpath    : 'user', \n\t\t\tselect  : {}, \n\t\t}\n\n\t\tPromise.all([\n\t\t\tthis.model.countAsync(query), \n\t\t\tthis.model.findAndPopulateAsync(params, options), \n\t\t])\n\t\t.then(docs => {\n\t\t\tres.tools.setJson(0, '调用成功', {\n\t\t\t\titems   : docs[1], \n\t\t\t\tpaginate: new res.paginate(Number(opts.page), Number(opts.limit), docs[0]).item, \n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /order/:id 获取某个指定资源的信息\n\t * @apiDescription 获取某个指定资源的信息\n\t * @apiName get\n\t * @apiGroup order\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /order/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tget(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\n\t\tconst params = {\n\t\t\tquery  : query, \n\t\t\tfields : {}, \n\t\t\toptions: {}, \n\t\t}\n\n\t\tconst options = {\n\t\t\tpath    : 'user', \n\t\t\tselect  : {}, \n\t\t}\n\n\t\tthis.model.findOneAndPopulateAsync(params, options)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /order 新建一个资源\n\t * @apiDescription 新建一个资源\n\t * @apiName post\n\t * @apiGroup order\n\t *\n\t * @apiParam {String} title 标题\n\t * @apiParam {String} remark 描述\n\t * @apiParam {Number} sort 排序\n\t * @apiParam {Boolean} is_show 是否显示\n\t * @apiParam {Array} images 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /order\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"新增成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\"\n\t *       }\n\t *     }\n\t */\n\tpost(req, res, next) {\n\t\tconst body = {\n\t\t\titems      : [], \n\t\t\ttotalAmount: 0, \n\t\t\taddress_id : req.body.address_id, \n\t\t\tuser       : req.user._id, \n\t\t}\n\n\t\tconst query = {\n\t\t\t_id: {\n\t\t\t\t$in: req.body.items.map(n => n.id),\n\t\t\t},\n\t\t}\n\n\t\tconst params = {\n\t\t\tquery  : query, \n\t\t\tfields : {}, \n\t\t\toptions: {}, \n\t\t}\n\n\t\tconst options = {\n\t\t\tpath    : 'types', \n\t\t\tselect  : {}, \n\t\t}\n\n\t\tproxy.address.findByIdAsync(body.address_id)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '地址不存在或已删除')\n\t\t\tbody.recipientName = doc.name\n\t\t\tbody.recipientGender = doc.gender\n\t\t\tbody.recipientTel = doc.tel\n\t\t\tbody.recipientAddress = doc.address\n\t\t\treturn proxy.goods.findAndPopulateAsync(params, options)\n\t\t})\n\t\t.then(doc => {\n\t\t\tdoc.forEach(n => {\n\t\t\t\tconst items = {\n\t\t\t\t\tgoods: n,\n\t\t\t\t\tmeta : {},\n\t\t\t\t}\n\t\t\t\treq.body.items.forEach(m => {\n\t\t\t\t\tif (n._id.toString() === m.id.toString()) {\n\t\t\t\t\t\titems.meta.total = Math.abs(m.total)\n\t\t\t\t\t\titems.meta.totalAmount = Math.abs(n.price * m.total)\n\t\t\t\t\t\tbody.totalAmount += items.meta.totalAmount\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tbody.items.push(items)\n\t\t\t})\n\t\t\treturn this.model.post(body)\n\t\t})\n\t\t.then(doc => {\n\t\t\tproxy.cart.removeAsync({\n\t\t\t\tuser: req.user._id,\n\t\t\t\tgoods: {\n\t\t\t\t\t$in: req.body.items.map(n => n.id),\n\t\t\t\t},\n\t\t\t})\n\t\t\tres.tools.setJson(0, '新增成功', {_id: doc._id})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {put} /order/:id 更新某个指定资源的信息\n\t * @apiDescription 更新某个指定资源的信息\n\t * @apiName put\n\t * @apiGroup order\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiParam {String} [title] 标题\n\t * @apiParam {String} [remark] 描述\n\t * @apiParam {Number} [sort] 排序\n\t * @apiParam {Boolean} [is_show] 是否显示\n\t * @apiParam {Array} [images] 图片\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /order/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"images\": [{\n\t *       \t\t\"_id\": \"_id\",\n\t *       \t\t\"name\": \"name\",\n\t *       \t\t\"path\": \"path\",\n\t *       \t\t\"create_at\": \"create_at\"\n\t *       \t}],\n\t *       \t\"is_show\": \"is_show\",\n\t *       \t\"remark\": \"remark\",\n\t *       \t\"sort\": \"sort\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tput(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\n\t\tconst body = {\n\t\t\ttitle    : req.body.title,\n\t\t\tremark   : req.body.remark,\n\t\t\tsort     : req.body.sort || 99,\n\t\t\tis_show  : req.body.is_show,\n\t\t\timages   : req.body.images,\n\t\t}\n\n\t\tthis.model.put(query, body)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '更新成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {delete} /order/:id 删除某个指定资源\n\t * @apiDescription 删除某个指定资源\n\t * @apiName delete\n\t * @apiGroup order\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiSampleRequest /order/:id\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tconst query = {\n\t\t\t_id : req.params.id, \n\t\t\tuser: req.user._id, \n\t\t}\n\t\t\n\t\tthis.model.delete(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/order.js","import proxy from '../proxy'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.help, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.get('/api/help', this.getAll.bind(this))\n\t\tthis.app.get('/api/help/:id', this.get.bind(this))\n\t\tthis.app.post('/api/help', this.post.bind(this))\n\t\tthis.app.put('/api/help/:id', this.put.bind(this))\n\t\tthis.app.delete('/api/help/:id', this.delete.bind(this))\n\t}\n\n\t/**\n\t * @apiDefine Header\n\t * @apiHeader {String} Authorization jsonwebtoken\n\t */\n\t\n\t/**\n\t * @apiDefine Success\n\t * @apiSuccess {Object} meta 状态描述\n\t * @apiSuccess {Number} meta.code 标识码，0表示成功，1表示失败\n\t * @apiSuccess {String} meta.message 标识信息\n\t * @apiSuccess {Object} data 数据内容\n\t */\n\t\n\t/**\n\t * @api {get} /help 列出所有资源\n\t * @apiDescription 列出所有资源\n\t * @apiName getAll\n\t * @apiGroup help\n\t * \n\t * @apiParam {String} [page=1] 指定第几页\n\t * @apiParam {String} [limit=10] 指定每页的记录数\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /help\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": [{\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"content\": \"content\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }]\n\t *     }\n\t */\t\n\tgetAll(req, res, next) {\n\t\tconst query = {}\n\n\t\tconst fields = {}\n\n\t\tconst options = {\n\t\t\tpage : req.query.page, \n\t\t\tlimit: req.query.limit, \n\t\t}\n\n\t\tPromise.all([\n\t\t\tthis.model.countAsync(query), \n\t\t\tthis.model.getAll(query, fields, options), \n\t\t])\n\t\t.then(docs => {\n\t\t\tres.tools.setJson(0, '调用成功', {\n\t\t\t\titems   : docs[1], \n\t\t\t\tpaginate: new res.paginate(Number(options.page), Number(options.limit), docs[0]).item, \n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\t\n\t/**\n\t * @api {get} /help/:id 获取某个指定资源的信息\n\t * @apiDescription 获取某个指定资源的信息\n\t * @apiName get\n\t * @apiGroup help\n\t *\n\t * @apiParam {String} id 资源ID\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /help/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"content\": \"content\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tget(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\n\t\tconst fields = {}\n\n\t\tthis.model.get(query, fields)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /help 新建一个资源\n\t * @apiDescription 新建一个资源\n\t * @apiName post\n\t * @apiGroup help\n\t *\n\t * @apiParam {String} title 标题\n\t * @apiParam {String} content 内容\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /help\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"新增成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\"\n\t *       }\n\t *     }\n\t */\n\tpost(req, res, next) {\n\t\tconst body = {\n\t\t\ttitle  : req.body.title, \n\t\t\tcontent: req.body.content, \n\t\t}\n\n\t\tthis.model.post(body)\n\t\t.then(doc => res.tools.setJson(0, '新增成功', {_id: doc._id}))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {put} /help/:id 更新某个指定资源的信息\n\t * @apiDescription 更新某个指定资源的信息\n\t * @apiName put\n\t * @apiGroup help\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiParam {String} [title] 标题\n\t * @apiParam {String} [content] 内容\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /help/:id\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"_id\": \"_id\",\n\t *       \t\"title\": \"title\",\n\t *       \t\"content\": \"content\",\n\t *       \t\"create_at\": \"create_at\",\n\t *       \t\"update_at\": \"update_at\"\n\t *       }\n\t *     }\n\t */\n\tput(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\n\t\tconst body = {\n\t\t\ttitle  : req.body.title, \n\t\t\tcontent: req.body.content, \n\t\t}\n\n\t\tthis.model.put(query, body)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '更新成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {delete} /help/:id 删除某个指定资源\n\t * @apiDescription 删除某个指定资源\n\t * @apiName delete\n\t * @apiGroup help\n\t *\n\t * @apiParam {String} id 资源ID\n\t * @apiSampleRequest /help/:id\n\t * \n\t * @apiPermission none\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"删除成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tdelete(req, res, next) {\n\t\tconst query = {\n\t\t\t_id: req.params.id\n\t\t}\n\t\t\n\t\tthis.model.delete(query)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '资源不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '删除成功')\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/help.js","import request from 'request'\nimport config from '../config'\nimport jwt from '../common/jwtauth'\nimport proxy from '../proxy'\nimport jwtauth from '../middlewares/jwtauth'\n\nclass Ctrl{\n\tconstructor(app) {\n\t\tObject.assign(this, {\n\t\t\tapp, \n\t\t\tmodel: proxy.user, \n\t\t})\n\n\t\tthis.init()\n\t}\n\n\t/**\n\t * 初始化\n\t */\n\tinit() {\n\t\tthis.routes()\n\t\tthis.initSuperAdmin()\n\t}\n\n\t/**\n\t * 注册路由\n\t */\n\troutes() {\n\t\tthis.app.post('/api/user/wechat/sign/up', this.wechatSignUp.bind(this))\n\t\tthis.app.post('/api/user/wechat/sign/in', this.wechatSignIn.bind(this))\n\t\tthis.app.post('/api/user/sign/up', this.signUp.bind(this))\n\t\tthis.app.post('/api/user/sign/in', this.signIn.bind(this))\n\t\tthis.app.post('/api/user/sign/out', this.signOut.bind(this))\n\t\tthis.app.post('/api/user/reset/password', this.resetPassword.bind(this))\n\t\tthis.app.post('/api/user/info', this.saveInfo.bind(this))\n\t\tthis.app.get('/api/user/info', this.getInfo.bind(this))\n\t}\n\n\t/**\n\t * 封装request请求\n\t */\n\trequestAsync(url) {\n\t\treturn new Promise((reslove, reject) => {\n\t\t\trequest({url: url}, (err, res, body) => {\n\t\t\t\tif (err) return reject(err)\n\t\t\t\treturn reslove(body)\n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * code 换取 session_key\n\t */\n\tgetSessionKey(code) {\n\t\tconst appid = config.wechat.appid\n\t\tconst secret = config.wechat.secret\n\t\tconst url = `https://api.weixin.qq.com/sns/jscode2session?appid=${appid}&secret=${secret}&js_code=${code}&grant_type=authorization_code`\n\t\treturn this.requestAsync(url)\n\t}\n\n\t/**\n\t * @api {post} /user/wechat/sign/up 微信用户注册\n\t * @apiDescription 微信用户注册\n\t * @apiName wechatSignUp\n\t * @apiGroup user\n\t *\n\t * @apiParam {String} code 登录凭证\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /user/wechat/sign/up\n\t * \n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"注册成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"token\": \"token\"\n\t *       }\n\t *     }\n\t */\n\twechatSignUp(req, res, next) {\n\t\tconst code = req.body.code\n\t\tconst body = {\n\t\t\tusername: null, \n\t\t\tpassword: res.jwt.setMd5('123456'), \n\t\t}\n\n\t\tthis.getSessionKey(code)\n\t\t.then(doc => {\n\t\t\tdoc = JSON.parse(doc)\n\t\t\tif (doc && doc.errmsg) return res.tools.setJson(doc.errcode, doc.errmsg)\n\t\t\tif (doc && doc.openid) {\n\t\t\t\tbody.username = doc.openid\n\t\t\t\treturn this.model.findByName(doc.openid)\n\t\t\t}\n\t\t})\n\t\t.then(doc => {\n\t\t\tif (!doc) return this.model.newAndSave(body)\n\t\t\tif (doc && doc._id) return res.tools.setJson(1, '用户名已存在')\n\t\t})\n\t\t.then(doc => {\n\t\t\tif (doc && doc._id) return res.tools.setJson(0, '注册成功', {\n\t\t\t\ttoken: res.jwt.setToken(doc._id)\n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /user/wechat/sign/in 微信用户登录\n\t * @apiDescription 微信用户登录\n\t * @apiName wechatSignIn\n\t * @apiGroup user\n\t *\n\t * @apiParam {String} code 登录凭证\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /user/wechat/sign/in\n\t * \n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"登录成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"token\": \"token\"\n\t *       }\n\t *     }\n\t */\n\twechatSignIn(req, res, next) {\n\t\tconst code = req.body.code\n\n\t\tthis.getSessionKey(code)\n\t\t.then(doc => {\n\t\t\tdoc = JSON.parse(doc)\n\t\t\tif (doc && doc.errmsg) return res.tools.setJson(doc.errcode, doc.errmsg)\n\t\t\tif (doc && doc.openid) return this.model.findByName(doc.openid)\n\t\t})\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '用户名不存在')\n\t\t\tif (doc && doc._id) return res.tools.setJson(0, '登录成功', {\n\t\t\t\ttoken: res.jwt.setToken(doc._id)\n\t\t\t})\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * 创建超级管理员\n\t */\n\tinitSuperAdmin(req, res, next) {\n\t\tconst username = config.superAdmin.username\n\t\tconst password = config.superAdmin.password\n\n\t\tthis.model.findByName(username)\n\t\t.then(doc => {\n\t\t\tif (!doc) return this.model.newAndSave({\n\t\t\t\tusername: username, \n\t\t\t\tpassword: jwt.setMd5(password), \n\t\t\t})\n\t\t})\n\t}\n\n\t/**\n\t * @api {post} /user/sign/up 用户注册\n\t * @apiDescription 用户注册\n\t * @apiName signUp\n\t * @apiGroup user\n\t *\n\t * @apiParam {String} username 用户名\n\t * @apiParam {String} password 密码\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /user/sign/up\n\t * \n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"注册成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tsignUp(req, res, next) {\n\t\tconst username = req.body.username\n\t\tconst password = req.body.password\n\n\t\tif (!username || !password) return res.tools.setJson(1, '用户名或密码错误')\n\t\t\n\t\tthis.model.findByName(username)\n\t\t.then(doc => {\n\t\t\tif (!doc) return this.model.newAndSave({\n\t\t\t\tusername: username, \n\t\t\t\tpassword: res.jwt.setMd5(password)\n\t\t\t})\n\t\t\treturn res.tools.setJson(1, '用户名已存在')\n\t\t})\n\t\t.then(doc => res.tools.setJson(0, '注册成功'))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {post} /user/sign/in 用户登录\n\t * @apiDescription 用户登录\n\t * @apiName signIn\n\t * @apiGroup user\n\t *\n\t * @apiParam {String} username 用户名\n\t * @apiParam {String} password 密码\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /user/sign/in\n\t * \n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"登录成功\"\n\t *       },\n\t *       \"data\": {\n\t *       \t\"token\": \"token\"\n\t *       }\n\t *     }\n\t */\n\tsignIn(req, res, next) {\n\t\tconst username = req.body.username\n\t\tconst password = req.body.password\n\t\t\n\t\tif (!username || !password) return res.tools.setJson(1, '用户名或密码错误')\t\n\t\tif (req.body.code !== req.session.code) return res.tools.setJson(1, '验证码错误')\n\n\t\tthis.model.model.getAuthenticated(username, password)\n\t\t.then(doc => {\n\t\t\tswitch (doc) {\n\t            case 0:\n\t            \tres.tools.setJson(1, '用户名或密码错误')\n\t            \tbreak\n\t            case 1:\n\t                res.tools.setJson(1, '用户名或密码错误')\n\t                break\n\t            case 2:\n\t                res.tools.setJson(1, '账号已被锁定，请等待两小时解锁后重新尝试登录')\n\t                break\n\t            default: res.tools.setJson(0, '登录成功', {\n\t\t\t\t\ttoken: res.jwt.setToken(doc._id)\n\t\t\t\t})\n\t        }\n\t\t})\n\t\t.catch(err => next(err))\t\n\t}\n\n\t/**\n\t * @api {post} /user/sign/out 用户登出\n\t * @apiDescription 用户登出\n\t * @apiName signOut\n\t * @apiGroup user\n\t *\n\t * @apiPermission none\n\t * @apiSampleRequest /user/sign/out\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"登出成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tsignOut(req, res, next) {\n\t\tif (req.user) {\n\t\t\tnew jwtauth().expireToken(req.headers)\n\t\t\tdelete req.user\t\n\t\t\tdelete this.app.locals.token\n\t\t\treturn res.tools.setJson(0, '登出成功')\n\t\t}\n\t\treturn res.tools.setJson(1, '登出失败')\n\t}\n\n\t/**\n\t * @api {post} /user/reset/password 修改密码\n\t * @apiDescription 修改密码\n\t * @apiName resetPassword\n\t * @apiGroup user\n\t *\n\t * @apiParam {String} oldpwd 旧密码\n\t * @apiParam {String} newpwd 新密码\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /user/reset/password\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": null\n\t *     }\n\t */\n\tresetPassword(req, res, next) {\n\t\tconst oldpwd = req.body.oldpwd\n\t\tconst newpwd = req.body.newpwd\n\t\t\t\n\t\tif (oldpwd && newpwd) {\n\t\t\tthis.model.findByName(req.user.username)\n\t\t\t.then(doc => {\n\t\t\t\tif (!doc) return res.tools.setJson(1, '用户不存在或已删除')\n\t\t\t\tif (doc.password !== res.jwt.setMd5(oldpwd)) return res.tools.setJson(1, '密码错误')\n\t\t\t\tdoc.password = res.jwt.setMd5(newpwd)\n\t\t\t\treturn doc.save()\n\t\t\t})\n\t\t\t.then(doc => res.tools.setJson(0, '更新成功'))\n\t\t\t.catch(err => next(err))\n\t\t}\n\t}\n\n\t/**\n\t * @api {post} /user/info 保存用户信息\n\t * @apiDescription 保存用户信息\n\t * @apiName saveInfo\n\t * @apiGroup user\n\t *\n\t * @apiParam {Date} birthday 生日\n\t * @apiParam {String} email 邮箱\n\t * @apiParam {String} gender 性别\n\t * @apiParam {String} avatar 头像\n\t * @apiParam {String} nickname 昵称\n\t * @apiParam {String} tel 手机\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /user/info\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"更新成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\tsaveInfo(req, res, next) {\n\t\tthis.model.findByName(req.user.username)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '用户不存在或已删除')\n\n\t\t\tfor(let key in req.body) {\n\t\t\t\tdoc[key] = req.body[key]\n\t\t\t}\n\n\t\t\tdoc.update_at = Date.now()\n\n\t\t\treturn doc.save()\n\t\t})\n\t\t.then(doc => res.tools.setJson(0, '更新成功', doc))\n\t\t.catch(err => next(err))\n\t}\n\n\t/**\n\t * @api {get} /user/info 获取用户信息\n\t * @apiDescription 获取用户信息\n\t * @apiName getInfo\n\t * @apiGroup user\n\t * \n\t * @apiPermission none\n\t * @apiSampleRequest /user/info\n\t * \n\t * @apiUse Header\n\t * @apiUse Success\n\t *\n\t * @apiSuccessExample Success-Response:\n\t *     HTTP/1.1 200 OK\n\t *     {\n\t *       \"meta\": {\n\t *       \t\"code\": 0,\n\t *       \t\"message\": \"调用成功\"\n\t *       },\n\t *       \"data\": {}\n\t *     }\n\t */\n\tgetInfo(req, res, next) {\n\t\tthis.model.findByName(req.user.username)\n\t\t.then(doc => {\n\t\t\tif (!doc) return res.tools.setJson(1, '用户不存在或已删除')\n\t\t\treturn res.tools.setJson(0, '调用成功', doc)\n\t\t})\n\t\t.catch(err => next(err))\n\t}\n}\n\nexport default Ctrl\n\n\n// WEBPACK FOOTER //\n// ./controllers/user.js"],"sourceRoot":""}